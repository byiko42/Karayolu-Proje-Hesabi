# -*- coding:utf-8 -*-
from webbrowser import open_new_tab
import cevir
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *

import math
import time
import locale
from PyQt5.QtGui import QPixmap
from PyQt5 import QtWidgets, QtCore
from PyQt5.QtGui import QIcon
import PyQt5.QtWidgets
import sys



locale.setlocale(locale.LC_ALL, 'turkish')

class MainWindow(QMainWindow):


    def __init__(self, parent=None):
      QMainWindow.__init__(self, parent)
      super().__init__()


      self.widget = giris()
      self.setCentralWidget(self.widget)
      self.setUI()

    def setUI(self):
        self.statusBar()
        self.setAutoFillBackground(True)
        self.p = self.palette()
        self.p.setColor(self.backgroundRole(), Qt.white)
        self.setPalette(self.p)

        menu = self.menuBar()
        self.toolbar = self.addToolBar("Araç Çubuğu")
        dosya = menu.addMenu("Dosya")

        aracc=dosya.addAction("Araç Çubuğu", lambda:
            self.toolbar.setVisible(not self.toolbar.isVisible()))
        aracc.setStatusTip("Araç Çubuğu")

        forr=dosya.addAction("Formüller")
        forr.setStatusTip("Formüller")

        self.setMinimumSize(QDesktopWidget().screenGeometry().width() * 0.37,
                            QDesktopWidget().screenGeometry().height() * 0.70)
        self.setMaximumSize(QDesktopWidget().screenGeometry().width() * 1.5,
                            QDesktopWidget().screenGeometry().height() * 1.50)

        self.setWindowIcon(QIcon(":logo.jpg"))
        ekran = menu.addMenu("Ekran")
        küc=ekran.addAction("Küçült", lambda: self.showMinimized())
        küc.setStatusTip("Küçült")
        kücc=ekran.addAction("Normal Ekran", lambda: self.showNormal())
        kücc.setStatusTip("Normal Ekran")
        kücc1=ekran.addAction("Büyük Ekran", lambda: self.showMaximized())
        kücc1.setStatusTip("Büyük Ekran")
        kücc2=ekran.addAction("Tam Ekran", lambda: self.showFullScreen())
        kücc2.setStatusTip("Tam Ekran")
        iletisim = menu.addMenu("İletişim")

        can=dosya.addAction("Kapat", self.close)
        can.setStatusTip("Kapat")
        can.setShortcut("Alt+F4")


        self.toolbar.setMovable(True)

        info = QAction(QIcon(":home.png"),"Ana Sayfa", self)
        info.setStatusTip('Ana Sayfa')
        self.toolbar.addAction(info)
        self.toolbar.setIconSize(QSize(34,24))

        durusgörüs=QAction(QIcon(":car.png"), "Duruş Görüş Uzunluğu Hesabı", self)
        self.toolbar.addAction(durusgörüs)
        durusgörüs.setStatusTip('Duruş Görüş Uzunluğu Hesabı')


        dsya = QAction(QIcon(":pergi.png"), "Pergel Açıklığı Hesabı", self)
        self.toolbar.addAction(dsya)
        dsya.setStatusTip('Pergel Açıklığı Hesabı')

        sapma=QAction(QIcon(":delta.png"),"Sapma Açısı Hesabı",self)
        self.toolbar.addAction(sapma)
        sapma.setStatusTip('Sapma Açısı Hesabı')

        yazıcı = QAction(QIcon(":sarttt.png"),"Geçiş Eğrisiz Yatay Kurp Hesabı", self)
        self.toolbar.addAction(yazıcı)
        yazıcı.setStatusTip('Geçiş Eğrisiz Yatay Kurp Hesabı')

        tanim = QAction(QIcon(":düzyol.png"), "Geçiş Eğrisiz Yol Uzunluğu Hesabı", self)
        self.toolbar.addAction(tanim)
        tanim.setStatusTip('Geçiş Eğrisiz Yol Uzunluğu Hesabı')

        gecis = QAction(QIcon(":egriegri.png"), "Geçiş Eğrili Yatay Kurp Hesabı", self)
        self.toolbar.addAction(gecis)
        gecis.setStatusTip('Geçiş Eğrili Yatay Kurp Hesabı')

        klotoid=QAction(QIcon(":liste.png"),"Uygun Klotoid Parametrelerinin Seçimi", self)
        self.toolbar.addAction(klotoid)
        klotoid.setStatusTip('Uygun Klotoid Parametrelerinin Seçimi')

        simetrik = QAction(QIcon(":simetrik.png"),"Simetrik Klotoid Hesabı", self)
        self.toolbar.addAction(simetrik)
        simetrik.setStatusTip('Simetrik Klotoid Hesabı')

        asimetrik = QAction(QIcon(":msimetrik.png"), "Asimetrik Klotoid Hesabı", self)
        self.toolbar.addAction(asimetrik)
        asimetrik.setStatusTip('Asimetrik Klotoid Hesabı')

        gecisegrili=QAction(QIcon(":egdir.png"), "Geçiş Eğrili Yol Uzunluğu Hesabı",self)
        self.toolbar.addAction(gecisegrili)
        gecisegrili.setStatusTip('Geçiş Eğrili Yol Uzunluğu Hesabı')

        genismiktar = QAction(QIcon(":sradius.png"), "Rakortman Boyu Hesabı", self)
        self.toolbar.addAction(genismiktar)
        genismiktar.setStatusTip('Rakortman Boyu Hesabı')

        formül= QAction(QIcon(":gormül.png"), "Formüller", self)
        self.toolbar.addAction(formül)
        formül.setStatusTip('Formüller')

        hakkımda = QAction(QIcon(":hakkında.png"), "Hakkımızda", self)
        self.toolbar.addAction(hakkımda)
        hakkımda.setStatusTip('Hakkımızda')
        ulas=iletisim.addAction("Bana Ulaşın", lambda:
        open_new_tab('http://canberkcabbaroglu.com/index.php/iletisim/'))
        ulas.setStatusTip("Bana Ulaşın")
        self.show()


        self.setWindowTitle("Karayolu Proje Hesabı")

        self.toolbar.actionTriggered.connect(self.uygula11)
        self.toolbar.actionTriggered.connect(self.uygulam)
        self.toolbar.actionTriggered.connect(self.uygulaa)
        self.toolbar.actionTriggered.connect(self.uygula10)
        self.toolbar.actionTriggered.connect(self.uygula9)
        self.toolbar.actionTriggered.connect(self.uygula8)
        self.toolbar.actionTriggered.connect(self.uygula7)
        self.toolbar.actionTriggered.connect(self.uygula6)
        self.toolbar.actionTriggered.connect(self.uygula1)
        self.toolbar.actionTriggered.connect(self.baslik)
        self.toolbar.actionTriggered.connect(self.uygula5)
        self.toolbar.actionTriggered.connect(self.uygula4)
        self.toolbar.actionTriggered.connect(self.uygula2)
        menu.triggered[QAction].connect(self.uygula)
        self.toolbar.actionTriggered.connect(self.uygula3)
    def uygulam(self,q):
        if q.text() == "Uygun Klotoid Parametrelerinin Seçimi":
            self.setCentralWidget(uygunluk())
    def uygula11(self,q):
        if q.text() == "Rakortman Boyu Hesabı":
            self.setCentralWidget(genisleme())
    def uygula10(self,q):
        if q.text() == "Geçiş Eğrili Yol Uzunluğu Hesabı":
            self.setCentralWidget(toplamuzun())
    def baslik(self,q):
        if q.text() == "Hakkımızda":
            self.setCentralWidget(baslik())
    def uygula8(self, q):
        if q.text() == "Geçiş Eğrili Yatay Kurp Hesabı":
            self.setCentralWidget(gecisegrili())
    def uygula9(self, q):
        if q.text() == "Geçiş Eğrisiz Yol Uzunluğu Hesabı":
            self.setCentralWidget(gecisegrisizyoluz())
    def uygula7(self, q):
        if q.text() == "Asimetrik Klotoid Hesabı":
            self.setCentralWidget(asimetrikklotoid())

    def uygula6(self,q):
        if q.text() == "Simetrik Klotoid Hesabı":
            self.setCentralWidget(simetrikklotoid())
    def uygula5(self,q):
        if q.text() == "Duruş Görüş Uzunluğu Hesabı":
            self.setCentralWidget(durusgörüs())

    def uygula1(self, q):
        if q.text() == "Formüller":
            self.setCentralWidget(formül())

    def uygula4(self,q):
        if q.text() == "Geçiş Eğrisiz Yatay Kurp Hesabı":
            self.setCentralWidget(gecisegrisiz())


    def uygula2(self, q):
        if q.text() == "Ana Sayfa":
            self.setCentralWidget(giris())
    def uygula(self, q):

        if q.text() == "Formüller":
            self.setCentralWidget(formül())


    def uygula3(self, n):
        if n.text()=="Pergel Açıklığı Hesabı":
            self.setCentralWidget(pergelacikligi())

    def uygulaa(self, n):
        if n.text()=="Sapma Açısı Hesabı":
            self.setCentralWidget(sapmacisi())


    def closeEvent(self, event):

        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Critical)
        msgBox.setWindowTitle("ÇIKIŞ")
        msgBox.setText("Program Kapatılacak.")


        connectButton = msgBox.addButton(self.tr("Evet"), QMessageBox.ActionRole)
        abortButton = msgBox.addButton(self.tr("Hayır"), QMessageBox.ActionRole)

        msgBox.exec_()

        if msgBox.clickedButton() == connectButton:
            event.accept()
        elif msgBox.clickedButton() == abortButton:
            event.ignore()




class sapmacisi(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()

    def setUI(self):
        self.push = QPushButton("Birimler")
        self.rbas = QLabel("Kurp Sayısını İşaretleyiniz")
        self.rbas.setFont(QFont("Arial", 10, QFont.SansSerif))
        self.r1 = QRadioButton("1")
        self.r2 = QRadioButton("2")
        self.rbut = QPushButton("Seç")
        self.adım = QLabel("")
        self.adım.setFont(QFont("Arial", 12, QFont.Bold))
        self.label = QLabel("Sapma Açısı Hesabı")
        self.label.setFont(QFont("Arial", 14, QFont.Bold))
        self.setWindowTitle('Klotoid Hesabı')
        self.uyari = QLabel("")
        self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
        self.grad = 200 / math.pi
        self.b1=QLabel("Açıklık Açıları")
        self.b2=QLabel("Aliyman Boyları")
        self.b3 = QLabel("Sapma Açıları")
        self.b4 = QLabel()
        self.f1 = QLineEdit()
        self.f2 = QLineEdit()
        self.f3 = QLineEdit()
        self.f4 = QLineEdit()
        self.f5 = QLineEdit()
        self.f6 = QLineEdit()
        self.f7 = QLineEdit()
        self.f8 = QLineEdit()
        self.f9 = QLabel("Veriler:")
        self.f11 = QLabel("Cevaplar:")
        self.c1 = QLineEdit()
        self.c2 = QLineEdit()
        self.c3 = QLineEdit()
        self.c4 = QLineEdit()
        self.c5 = QLineEdit()
        self.c6 = QLineEdit()
        self.c7=QLineEdit()
        self.c8=QLineEdit()
        self.l1=QLabel("Başlangıç Noktası(A)")
        self.l2=QLabel("1.Some Noktası(K1)")
        self.l3=QLabel("2.Some Noktası(K2)")
        self.l4=QLabel("Bitiş Noktası(B)\t")
        self.koor = QLabel("Koordinatlar")
        self.koor.setAlignment(Qt.AlignLeft)
        self.koor.setFont(QFont("Arial", 10, QFont.Bold))
        self.y = QLabel("Y")
        self.y.setFont(QFont("Arial", 10, QFont.Bold))
        self.y.setAlignment(Qt.AlignLeft)
        self.x = QLabel("X")
        self.x.setAlignment(Qt.AlignCenter)
        self.x.setFont(QFont("Arial", 10, QFont.Bold))
        self.no = QLabel("Nokta No")
        self.no.setFont(QFont("Arial", 10, QFont.Bold))
        self.s1 = QLineEdit()
        self.s2 = QLineEdit()

        self.f9.setFont(QFont("Helvetica", 11, QFont.Unstretched))
        self.f11.setFont(QFont("Helvetica", 11, QFont.Unstretched))

        self.hesapla = QPushButton("Hesapla")
        self.temizle = QPushButton("Temizle")
        form = QFormLayout()


        ha= QHBoxLayout()
        ha.addWidget(self.l1)
        ha.addWidget(self.f1)
        ha.addWidget(self.f2)
        ha1 = QHBoxLayout()
        ha1.addWidget(self.l2)
        ha1.addWidget(self.f3)
        ha1.addWidget(self.f4)
        ha2 = QHBoxLayout()
        ha2.addWidget(self.l3)
        ha2.addWidget(self.f5)
        ha2.addWidget(self.f6)
        ha3 = QHBoxLayout()
        ha3.addWidget(self.l4)
        ha3.addWidget(self.f7)
        ha3.addWidget(self.f8)

        hbox10 = QHBoxLayout()
        hbox10.addWidget(self.r1)
        hbox10.addWidget(self.r2)
        hbox10.addWidget(self.rbut)
        v4 = QVBoxLayout()
        v4.addWidget(self.rbas)
        v4.addLayout(hbox10)
        hbox = QVBoxLayout()
        hbox.addLayout(ha)
        hbox.addLayout(ha1)
        hbox.addLayout(ha2)
        hbox.addLayout(ha3)
        self.t1=QLabel("(K1B)")
        self.t2=QLabel("|K1B|")
        self.n1=QLabel("(K1K2)")
        self.n2=QLabel("(K2B)")
        self.n3=QLabel("|K1K2|")
        self.n4=QLabel("|K2B|")
        self.n5 = QLabel("Sapma Açısı(Δ2)")
        form9 = QFormLayout()
        form9.addRow(self.b1)
        form9.addRow(self.b1.setFont(QFont("Arial",9, QFont.Bold)))
        form9.addRow("(AK1)", self.c1)
        form9.addRow(self.t1,self.c7)
        form9.addRow(self.n1, self.c2)
        form9.addRow(self.n2, self.c3)
        form9.addRow(self.b3)
        form9.addRow(self.b3.setFont(QFont("Arial", 9, QFont.Bold)))
        form9.addRow("Sapma Açısı(Δ1)", self.s1)

        form5 = QFormLayout()
        form5.addRow(self.b2)
        form5.addRow(self.b2.setFont(QFont("Arial", 9, QFont.Bold)))
        form5.addRow("|AK1|", self.c4)
        form5.addRow(self.t2,self.c8)
        form5.addRow(self.n3, self.c5)
        form5.addRow(self.n4, self.c6)
        form5.addRow(self.b4)
        form5.addRow(self.b4.setFont(QFont("Arial", 9, QFont.Bold)))
        form5.addRow(self.n5, self.s2)
        hbox21 = QHBoxLayout()
        hbox21.addLayout(form9)
        hbox21.addLayout(form5)

        vbox7 = QVBoxLayout()
        vbox7.addWidget(self.hesapla)
        vbox8 = QVBoxLayout()
        vbox8.addWidget(self.temizle)
        hbox1 = QHBoxLayout()

        hbox1.addLayout(vbox7)
        hbox1.addLayout(vbox8)
        hbox49 = QHBoxLayout()
        hbox49.addWidget(self.adım)
        hbox49.addWidget(self.push)
        hbox50 = QHBoxLayout()
        hbox50.addWidget(self.no)
        hbox50.addWidget(self.y)
        hbox50.addWidget(self.x)
        hbox40 = QHBoxLayout()
        hbox40.addWidget(self.f9)
        hbox40.addWidget(self.koor)
        form27=QFormLayout()
        form27.addRow(self.label)
        form27.addRow(v4)
        form27.addRow(hbox40)
        form27.addRow(hbox50)
        form27.addRow(hbox)
        form27.addRow(self.uyari)
        form27.addRow(hbox1)
        form27.addRow(self.f11)
        form27.addRow(hbox21)
        form27.addRow(hbox)
        form27.addRow(hbox49)
        vbox = QVBoxLayout()
        vbox.addLayout(form27)
        self.setLayout(vbox)
        self.push.clicked.connect(self.baglan)
        self.hesapla.clicked.connect(self.check)
        self.rbut.clicked.connect(self.secim)
        self.hesapla.clicked.connect(self.secim)


        self.temizle.clicked.connect(self.tmz)

        self.show()

    def baglan(self):
        mesajkutusu = QMessageBox()
        mesajkutusu.setText("Kullanılan Birimler")
        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
        mesajkutusu.setWindowTitle("Birimler")
        mesajkutusu.setInformativeText("Açıklık Açıları ve Sapma Açıları:grad\nAliyman Boyları:metre")
        mesajkutusu.exec()
    def check(self):
        if self.r1.isChecked():self.kapali()
        elif self.r2.isChecked():self.acik()
        else:self.uyari.setText(str("Yukarıda Kurp Seçimini Yapınız ve Verileri Eksiksiz Giriniz"))

    def secim(self):
        if self.r1.isChecked():
            self.l3.close()
            self.c2.close()
            self.c5.close()
            self.c3.close()
            self.s2.close()
            self.c6.close()
            self.f5.close()
            self.f6.close()
            self.c7.show()
            self.c8.show()
            self.t1.show()
            self.t2.show()
            self.n1.close()
            self.n2.close()
            self.n3.close()
            self.n4.close()
            self.n5.close()

        elif self.r2.isChecked():
            self.l3.show()
            self.c2.show()
            self.c5.show()
            self.c7.close()
            self.c8.close()
            self.c3.show()
            self.s2.show()
            self.c6.show()
            self.f5.show()
            self.f6.show()
            self.t1.close()
            self.t2.close()
            self.n1.show()
            self.n2.show()
            self.n3.show()
            self.n4.show()
            self.n5.show()

    def tmz(self):
        self.f1.clear()
        self.f2.clear()
        self.f3.clear()
        self.f4.clear()
        self.f5.clear()
        self.f6.clear()
        self.f7.clear()
        self.f8.clear()
        self.c1.clear()
        self.c2.clear()
        self.c3.clear()
        self.c4.clear()
        self.c5.clear()
        self.c6.clear()
        self.c7.clear()
        self.c8.clear()
        self.s1.clear()
        self.s2.clear()
        self.uyari.clear()

    def kapali(self):

        try:
            self.uyari.clear()
            ay = float(self.f1.text())
            ax = float(self.f2.text())
            s1y = float(self.f3.text())
            s1x = float(self.f4.text())
            by = float(self.f7.text())
            bx = float(self.f8.text())
            al1 = round(math.sqrt((s1y - ay) ** 2 + (s1x - ax) ** 2), 4)
            self.c4.setText(str(al1))
            al2 = round(math.sqrt((by - s1y) ** 2 + (bx - s1x) ** 2), 4)
            self.c8.setText(str(al2))

            if s1y - ay > 0 and s1x - ax > 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)), 5)
                self.c1.setText(str(a))
            elif s1y - ay > 0 and s1x - ax < 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 200, 5)
                self.c1.setText(str(a))
            elif s1y - ay < 0 and s1x - ax < 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 200, 5)
                self.c1.setText(str(a))
            elif s1y - ay < 0 and s1x - ax > 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 400, 5)
                self.c1.setText(str(a))
            elif s1x - ax == 0:
                a = round(100)
                self.c1.setText(str(a))
            elif s1y - ay == 0:
                a = round(200)
                self.c1.setText(str(a))

            if by - s1y > 0 and bx - s1x > 0:
                c = round(self.grad * math.atan((by - s1y) / (bx - s1x)), 5)
                self.c7.setText(str(c))
            elif by - s1y > 0 and bx - s1x < 0:
                c = round(self.grad * math.atan((by - s1y) / (bx - s1x)) + 200, 5)
                self.c7.setText(str(c))
            elif by - s1y < 0 and bx - s1x < 0:
                c = round(self.grad * math.atan((by - s1y) / (bx - s1x)) + 200, 5)
                self.c7.setText(str(c))
            elif by - s1y < 0 and bx - s1x > 0:
                c = round(self.grad * math.atan((by - s1y) / (bx - s1x)) + 400, 5)
                self.c7.setText(str(c))
            elif bx - s1x == 0:
                c = round(100)
                self.c7.setText(str(c))
            elif by- s1y == 0:
                c = round(200)
                self.c7.setText(str(c))
            z1 = round((abs(c-a)), 5)
            self.s1.setText(str(z1))
        except ValueError:

            self.c1.clear()
            self.c4.clear()
            self.c7.clear()
            self.c8.clear()
            self.s1.clear()
            self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
        except ZeroDivisionError:
            self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
        pass


    def acik(self):

        try:
            self.uyari.clear()
            ay = float(self.f1.text())
            ax = float(self.f2.text())
            s1y = float(self.f3.text())
            s1x = float(self.f4.text())
            s2y = float(self.f5.text())
            s2x = float(self.f6.text())
            by = float(self.f7.text())
            bx = float(self.f8.text())
            al1 = round(math.sqrt((s1y - ay) ** 2 + (s1x - ax) ** 2), 4)
            self.c4.setText(str(al1))
            al2 = round(math.sqrt((s2y - s1y) ** 2 + (s2x - s1x) ** 2), 4)
            self.c5.setText(str(al2))
            al3 = round(math.sqrt((by - s2y) ** 2 + (bx - s2x) ** 2), 4)
            self.c6.setText(str(al3))


            if s1y - ay > 0 and s1x - ax > 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)), 5)
                self.c1.setText(str(a))
            elif s1y - ay > 0 and s1x - ax < 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 200, 5)
                self.c1.setText(str(a))
            elif s1y - ay < 0 and s1x - ax < 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 200, 5)
                self.c1.setText(str(a))
            elif s1y - ay < 0 and s1x - ax > 0:
                a = round(self.grad * math.atan((s1y - ay) / (s1x - ax)) + 400, 5)
                self.c1.setText(str(a))
            elif s1x - ax == 0:
                a = round(100)
                self.c1.setText(str(a))
            elif s1y - ay == 0:
                 a = round(200)
                 self.c1.setText(str(a))





            if s2y - s1y > 0 and s2x - s1x > 0:
                b = round(self.grad * math.atan((s2y - s1y) / (s2x - s1x)), 5)
                self.c2.setText(str(b))
            elif s2y - s1y > 0 and s2x - s1x < 0:
                b = round(self.grad * math.atan((s2y - s1y) / (s2x - s1x)) + 200, 5)
                self.c2.setText(str(b))
            elif s2y - s1y < 0 and s2x - s1x < 0:
                b = round(self.grad * math.atan((s2y - s1y) / (s2x - s1x)) + 200, 5)
                self.c2.setText(str(b))
            elif s2y - s1y < 0 and s2x - s1x > 0:
                b = round(self.grad * math.atan((s2y - s1y) / (s2x - s1x)) + 400, 5)
                self.c2.setText(str(b))
            elif s2x - s1x== 0:
                b= round(100)
                self.c2.setText(str(b))
            elif s2y-s1y == 0:
                b = round(200)
                self.c2.setText(str(b))

            if by - s2y > 0 and bx - s2x > 0:
                c = round(self.grad * math.atan((by - s2y) / (bx - s2x)), 5)
                self.c3.setText(str(c))
            elif by - s2y > 0 and bx - s2x < 0:
                c = round(self.grad * math.atan((by - s2y) / (bx - s2x)) + 200, 5)
                self.c3.setText(str(c))
            elif by - s2y < 0 and bx - s2x < 0:
                c = round(self.grad * math.atan((by - s2y) / (bx - s2x)) + 200, 5)
                self.c3.setText(str(c))
            elif by - s2y < 0 and bx - s2x > 0:
                c = round(self.grad * math.atan((by - s2y) / (bx - s2x)) + 400, 5)
                self.c3.setText(str(c))
            elif bx - s2x == 0:
                c= round(100)
                self.c3.setText(str(c))
            elif by- s2y == 0:
                c= round(200)
                self.c3.setText(str(c))
            z1 = round((abs(a - b)), 5)
            self.s1.setText(str(z1))
            z2 = round((abs(b - c)), 5)
            self.s2.setText(str(z2))
        except ValueError:

            self.c1.clear()
            self.c2.clear()
            self.c3.clear()
            self.c4.clear()
            self.c5.clear()
            self.c6.clear()
            self.s1.clear()
            self.s2.clear()
            self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
        except ZeroDivisionError:
            self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
        pass



class toplamuzun(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()
    def setUI(self):
        self.h1 = QLabel("Klotoidin Boyu(L3)")
        self.h2 = QLabel("Klotoidin Boyu(L4)")
        self.h3 = QLabel("Klotoidin Teğet Boyu(T3)")
        self.h4 = QLabel("Klotoidin Teğet Boyu(T4)")
        self.yoluzun=QLabel()
        self.yoluzun.setFont(QFont("Arial", 10, QFont.Bold))
        self.uzunyol=QLabel("Toplam Yol Uzunluğu:")
        self.uzunyol.setFont(QFont("Arial", 10, QFont.Bold))
        self.birimm=QLabel("Hepsi:metre")
        self.aciklamak=QLabel("A=Başlangıç Kilometresi\tB=Toplam Yol Uzunluğu\tA=PB\tÜA11=TS2\nÜA11=1.Klotoidin Başlangıcı\tÜA21=2.Klotoidin Başlangıcı\tB=PS\tÜE11=SC2\nFi1=1.Klotoidin 1.Ortası\tFi2=2.Klotoidin 1.Ortası\t\tÜE12=CS2\nÜE11=1.Kurbun Başlangıcı\tÜE21=2.Kurbun Başlangıcı\t\tÜA12=ST2\nB1=1.Kurbun Ortası\tB2=2.Kurbun Ortası\t\tÜA21=TS3\nÜE12=1.Kurbun Bitişi\tÜE22=2.Kurbun Bitişi\t\tÜE21=SC3\nF1=1.Klotoidin 2.Ortası\tF2=2.Klotoidin 2.Ortası\t\tÜE22=CS3\nÜA12=1.Klotoidin Bitişi\tÜA22=2.Klotoidin Bitişi\t\tÜA22=ST3")
        self.label = QLabel("Geçiş Eğrili Yol Uzunluk Hesabı")
        self.label.setFont(QFont("Helvetica", 14, QFont.Bold))
        self.aciklama = QLabel("Açıklama:")
        self.aciklama.setFont(QFont("Arial", 12, QFont.Bold))
        self.v1 = QLabel("Veriler:")
        self.v1.setFont(QFont("Arial", 12, QFont.Bold))
        self.uyari=QLabel()
        self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
        self.group1=QButtonGroup()
        self.group2=QButtonGroup()
        self.simetri = QLabel()
        self.asimetri=QLabel()
        self.acik=QLabel("Lütfen cevapların doğru çıkması için aşağıdaki değerleri sırasıyla giriniz!\n(Ör=1.Klotoid Asimetri(L1,L2) 2.Klotoid Simetri(L3))")
        self.sec=QPushButton("Seç")
        self.push=QPushButton("Tanımlar")
        self.a0=QLineEdit()
        self.a1=QLineEdit()
        self.a2 = QLineEdit()
        self.a3 = QLineEdit()
        self.a4 = QLineEdit()
        self.a5 = QLineEdit()
        self.a6 = QLineEdit()
        self.a7 = QLineEdit()
        self.a8 = QLineEdit()
        self.a9 = QLineEdit()

        self.f1 = QLineEdit()
        self.f2 = QLineEdit()
        self.f3 = QLineEdit()
        self.f4=QLineEdit()
        self.f5=QLineEdit()
        self.f6=QLineEdit()
        self.f7=QLineEdit()
        self.f8=QLineEdit()
        self.f9=QLineEdit()
        self.f10=QLineEdit()
        self.baslangic=QLineEdit()
        self.c1=QLineEdit()
        self.c2=QLineEdit()
        self.c3=QLineEdit()
        self.r1=QRadioButton()
        self.r2=QRadioButton()
        self.r3 = QRadioButton()
        self.r4 = QRadioButton()
        self.z1=QLineEdit()
        self.z2= QLineEdit()
        self.z3 = QLineEdit()
        self.z4 = QLineEdit()
        self.z5 = QLineEdit()
        self.z6 = QLineEdit()
        self.hesapla = QPushButton("Hesapla")
        self.temizle = QPushButton("Temizle")
        forma=QFormLayout()
        forma.addRow("Birinci Kurbun Klotoidini Seçiniz",self.simetri)
        forma.addRow("Simetrik Klotoid",self.r1)
        forma.addRow("Asimetrik Klotoid",self.r2)

        formb=QFormLayout()
        formb.addRow("İkinci Kurbun Klotoidini Seçiniz",self.asimetri)
        formb.addRow("Simetrik Klotoid", self.r3)
        formb.addRow("Asimetrik Klotoid",self.r4)
        formb.addRow(self.sec)

        self.group1.addButton(self.r1)
        self.group1.addButton(self.r2)
        self.group2.addButton(self.r3)
        self.group2.addButton(self.r4)

        form1 = QFormLayout()
        form1.addRow("1.Developman Boyu(D1)", self.f1)
        form1.addRow("Klotoidin Teğet Boyu(T1)", self.f3)
        form1.addRow("Klotoidin Teğet Boyu(T2)", self.f4)
        form1.addRow(self.h3, self.f5)
        form1.addRow(self.h4, self.f9)
        form1.addRow("A Başlangıç Noktası", self.baslangic)
        form1.addRow("|AK1| Aliyman Boyu", self.c1)
        form2=QFormLayout()
        form2.addRow("2.Developman Boyu(D2)", self.f2)
        form2.addRow("Klotoidin Boyu(L1)", self.f6)
        form2.addRow("Klotoidin Boyu(L2)", self.f7)
        form2.addRow(self.h1, self.f8)
        form2.addRow(self.h2, self.f10)

        form2.addRow("|K1K2| Aliyman Boyu", self.c2)
        form2.addRow("|K2B| Aliyman Boyu", self.c3)
        hbox = QHBoxLayout()
        hbox.addLayout(forma)
        hbox.addLayout(formb)
        hbox2 = QHBoxLayout()
        hbox2.addLayout(form1)
        hbox2.addLayout(form2)
        hbox3=QHBoxLayout()
        hbox3.addWidget(self.hesapla)
        hbox3.addWidget(self.temizle)
        form8=QFormLayout()
        form8.addRow("A", self.a0)
        form8.addRow("ÜA11", self.a1)
        form8.addRow("Fi1", self.z1)
        form8.addRow("ÜE11", self.a2)
        form10=QFormLayout()
        form10.addRow("B1", self.z2)
        form10.addRow("ÜE12", self.a3)
        form10.addRow("F1", self.z3)
        form10.addRow("ÜA12", self.a4)
        hbox5= QHBoxLayout()
        hbox5.addLayout(form8)
        hbox5.addLayout(form10)
        form9=QFormLayout()
        form9.addRow("ÜA21", self.a5)
        form9.addRow("Fi2", self.z4)
        form9.addRow("ÜE21", self.a6)
        form9.addRow("B2", self.z5)
        form11=QFormLayout()
        form11.addRow("ÜE22", self.a7)
        form11.addRow("F2", self.z6)
        form11.addRow("ÜA22", self.a8)
        form11.addRow("B", self.a9)
        hbox6=QHBoxLayout()
        hbox6.addLayout(form9)
        hbox6.addLayout(form11)
        hbox4=QHBoxLayout()
        hbox4.addLayout(hbox5)
        hbox4.addLayout(hbox6)
        hbox5=QHBoxLayout()
        hbox5.addWidget(self.uzunyol)
        hbox5.addWidget(self.yoluzun)
        hbox48=QHBoxLayout()
        hbox48.addWidget(self.acik)
        hbox48.addWidget(self.push)
        vbox = QVBoxLayout()
        vbox.addWidget(self.label)
        vbox.addLayout(hbox)
        vbox.addWidget(self.v1)
        vbox.addLayout(hbox48)
        vbox.addLayout(hbox2)
        vbox.addWidget(self.uyari)
        vbox.addLayout(hbox3)
        vbox.addLayout(hbox5)

        vbox.addLayout(hbox4)

        self.setLayout(vbox)
        self.push.clicked.connect(self.baglan)
        self.hesapla.clicked.connect(self.check)
        self.hesapla.clicked.connect(self.secim)
        self.sec.clicked.connect(self.secim)
        self.temizle.clicked.connect(self.temizlemek)
        self.show()
    def baglan(self):
        mesajkutusu=QMessageBox()
        mesajkutusu.setText("Cevaplardaki Tanımlar")
        mesajkutusu.setWindowTitle("Tanımlar")
        mesajkutusu.setInformativeText("A=Başlangıç Kilometresi\tB=Toplam Yol Uzunluğu\tA=PB\tÜA11=TS2\nÜA11=1.Klotoidin Başlangıcı\tÜA21=2.Klotoidin Başlangıcı\tB=PS\tÜE11=SC2\nFi1=1.Klotoidin 1.Ortası\tFi2=2.Klotoidin 1.Ortası\t\tÜE12=CS2\nÜE11=1.Kurbun Başlangıcı\tÜE21=2.Kurbun Başlangıcı\t\tÜA12=ST2\nB1=1.Kurbun Ortası\t\tB2=2.Kurbun Ortası\t\t\tÜA21=TS3\nÜE12=1.Kurbun Bitişi\t\tÜE22=2.Kurbun Bitişi\t\t\tÜE21=SC3\nF1=1.Klotoidin 2.Ortası\tF2=2.Klotoidin 2.Ortası\t\tÜE22=CS3\nÜA12=1.Klotoidin Bitişi\tÜA22=2.Klotoidin Bitişi\t\tÜA22=ST3")
        mesajkutusu.exec()
    def check(self):
        if self.r2.isChecked() and self.r3.isChecked():self.asimsim()
        elif self.r1.isChecked() and self.r4.isChecked():self.simasim()
        elif self.r1.isChecked() and self.r3.isChecked():self.simsim()
        elif self.r2.isChecked() and self.r4.isChecked():self.asimasim()
        else:self.uyari.setText(str("Yukarıda Kurp Seçimin Yapınız ve Verileri Eksiksiz Giriniz!"))

    def secim (self):
        if  self.r2.isChecked() and self.r3.isChecked():
         self.h1.show()
         self.h3.show()
         self.h2.close()
         self.h4.close()
         self.f5.show()
         self.f8.show()
         self.f9.close()
         self.f10.close()
        elif self.r1.isChecked() and self.r4.isChecked():
         self.h2.close()
         self.h4.close()
         self.h1.show()
         self.h3.show()
         self.f5.show()
         self.f8.show()
         self.f9.close()
         self.f10.close()
        elif self.r1.isChecked() and self.r3.isChecked():
         self.h1.close()
         self.h2.close()
         self.h3.close()
         self.h4.close()
         self.f5.close()
         self.f8.close()
         self.f9.close()
         self.f10.close()
        elif self.r2.isChecked() and self.r4.isChecked():
         self.h1.show()
         self.h2.show()
         self.h3.show()
         self.h4.show()
         self.f5.show()
         self.f8.show()
         self.f9.show()
         self.f10.show()
    def temizlemek(self):
        self.f1.clear()
        self.f2.clear()
        self.f3.clear()
        self.f4.clear()
        self.f5.clear()
        self.f6.clear()
        self.f7.clear()
        self.f8.clear()
        self.f9.clear()
        self.f10.clear()
        self.a0.clear()
        self.a1.clear()
        self.a2.clear()
        self.a3.clear()
        self.a4.clear()
        self.a5.clear()
        self.a6.clear()
        self.a7.clear()
        self.a8.clear()
        self.a9.clear()
        self.z1.clear()
        self.z2.clear()
        self.z3.clear()
        self.z4.clear()
        self.z5.clear()
        self.z6.clear()
        self.baslangic.clear()
        self.c1.clear()
        self.c2.clear()
        self.c3.clear()
        self.uyari.clear()
        self.yoluzun.clear()
    def simsim(self):
       try:
        A=float(self.baslangic.text())
        D1=float(self.f1.text())
        D2 = float(self.f2.text())
        T1=  float(self.f3.text())
        L1=float(self.f6.text())
        L2=float(self.f7.text())
        T2=float(self.f4.text())
        AK1=float(self.c1.text())
        K1K2=float(self.c2.text())
        K2B=float(self.c3.text())

        A=round(A,3)
        self.a0.setText(str(A))
        TS2=round(AK1-T1,3)
        self.a1.setText(str(TS2))
        self.sigma0 = round(AK1 - T1 + (L1 / 2),3)
        self.z1.setText(str(self.sigma0))
        SC2=round(TS2+L1,3)
        self.a2.setText(str(SC2))
        self.B1 = round(SC2 + (D1 / 2),3)
        self.z2.setText(str(self.B1))
        CS2=round(SC2+D1,3)
        self.a3.setText(str(CS2))
        self.F1 = round(CS2 + (L1 / 2),3)
        self.z3.setText(str(self.F1))
        ST2=round(CS2+L1,3)
        self.a4.setText(str(ST2))
        TS3=round(K1K2+ST2-T1-T2,3)
        self.a5.setText(str(TS3))
        self.sigma1 = round(TS3 + (L2 / 2),3)
        self.z4.setText(str(self.sigma1))
        SC3=round(TS3+L2,3)
        self.a6.setText(str(SC3))
        self.B2 =round(SC3 + (D2 / 2),3)
        self.z5.setText(str(self.B2))
        CS3=round(SC3+D2,3)
        self.a7.setText(str(CS3))
        self.F2 = round(CS3 + (L2 / 2),3)
        self.z6.setText(str(self.F2))
        ST3=round(CS3+L2,3)
        self.a8.setText(str(ST3))
        B=round(K2B-T2+ST3,3)
        self.a9.setText(str(B))
        self.yoluzun.setText(str(B))
       except ValueError:
           self.a0.clear()
           self.a1.clear()
           self.a2.clear()
           self.a3.clear()
           self.a4.clear()
           self.a5.clear()
           self.a6.clear()
           self.a7.clear()
           self.a8.clear()
           self.a9.clear()
           self.z1.clear()
           self.z2.clear()
           self.z3.clear()
           self.z4.clear()
           self.z5.clear()
           self.z6.clear()
           self.yoluzun.clear()
           self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
       except ZeroDivisionError:
           self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
       pass

    def simasim(self):



      try:
        self.uyari.clear()
        A = float(self.baslangic.text())
        D1 = float(self.f1.text())
        D2=float(self.f2.text())
        T1 = float(self.f3.text())
        L1 = float(self.f6.text())
        L2 = float(self.f7.text())
        L3=float(self.f8.text())
        T2 = float(self.f4.text())
        T3=float(self.f5.text())
        AK1 = float(self.c1.text())
        K1K2 = float(self.c2.text())
        K2B = float(self.c3.text())

        A = round(A, 3)
        self.a0.setText(str(A))
        TS2 = round(AK1-T1,3)
        self.a1.setText(str(TS2))
        self.sigma0=round(AK1 - T1 + (L1 / 2),3)
        self.z1.setText(str(self.sigma0))
        SC2 = round(TS2+L1,3)
        self.a2.setText(str(SC2))
        self.B1 = round(SC2 + (D1 / 2),3)
        self.z2.setText(str(self.B1))
        CS2 = round(SC2+D1,3)
        self.a3.setText(str(CS2))
        self.F1 =round(CS2 + (L1 / 2),3)
        self.z3.setText(str(self.F1))
        ST2 =round(CS2+L1,3)
        self.a4.setText(str(ST2))

        TS3 = round(K1K2+ST2-T1-T2,3)
        self.a5.setText(str(TS3))
        self.sigma1 =round(TS3 + (L2 / 2),3)
        self.z4.setText(str(self.sigma1))
        SC3 = round(TS3+L2,3)
        self.a6.setText(str(SC3))
        self.B2= round(SC3 + (D2 / 2),3)
        self.z5.setText(str(self.B2))
        CS3 =round(SC3+D2,3)
        self.a7.setText(str(CS3))
        self.F2 = round(CS3 + (L3/ 2),3)
        self.z6.setText(str(self.F2))
        ST3=round(CS3+L3,3)
        self.a8.setText(str(ST3))
        B=round(K2B-T3+ST3,3)
        self.a9.setText(str(B))
        self.yoluzun.setText(str(B))
      except ValueError:
        self.a0.clear()
        self.a1.clear()
        self.a2.clear()
        self.a3.clear()
        self.a4.clear()
        self.a5.clear()
        self.a6.clear()
        self.a7.clear()
        self.a8.clear()
        self.a9.clear()
        self.z1.clear()
        self.z2.clear()
        self.z3.clear()
        self.z4.clear()
        self.z5.clear()
        self.z6.clear()
        self.yoluzun.clear()

        self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))

      except ZeroDivisionError:
        self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
        pass

    def asimsim(self):
      try:
        self.uyari.clear()
        A = float(self.baslangic.text())
        D1 = float(self.f1.text())
        D2 = float(self.f2.text())
        T1 = float(self.f3.text())
        L1 = float(self.f6.text())
        L2 = float(self.f7.text())
        L3 = float(self.f8.text())
        T2 = float(self.f4.text())
        T3 = float(self.f5.text())
        AK1 = float(self.c1.text())
        K1K2 = float(self.c2.text())
        K2B = float(self.c3.text())

        A = round(A,3)
        self.a0.setText(str(A))
        TS2 = round(AK1 - T1,3)
        self.a1.setText(str(TS2))
        self.sigma0 = round(AK1 - T1 + (L1 / 2),3)
        self.z1.setText(str(self.sigma0))
        SC2 = round(TS2 + L1,3)
        self.a2.setText(str(SC2))
        self.B1 = round(SC2 + (D1 / 2),3)
        self.z2.setText(str(self.B1))
        CS2 =round(SC2 + D1,3)
        self.a3.setText(str(CS2))
        self.F1 = round(CS2 + (L2 / 2), 3)
        self.z3.setText(str(self.F1))
        ST2 =round(CS2 + L2,3)
        self.a4.setText(str(ST2))
        TS3 = round(K1K2 + ST2 - T2 - T3,3)
        self.a5.setText(str(TS3))
        self.sigma1 =round(TS3 + (L3 / 2),3)
        self.z4.setText(str(self.sigma1))
        SC3 = round(TS3 + L3,3)
        self.a6.setText(str(SC3))
        self.B2 = round(SC3 + (D2 / 2),3)
        self.z5.setText(str(self.B2))
        CS3 = round(SC3 + D2,3)
        self.a7.setText(str(CS3))
        self.F2 = round(CS3 + (L3 / 2),3)
        self.z6.setText(str(self.F2))
        ST3 = round(CS3 + L3,3)
        self.a8.setText(str(ST3))
        B = round(K2B - T3 + ST3,3)
        self.a9.setText(str(B))
        self.yoluzun.setText(str(B))
      except ValueError:

          self.yoluzun.clear()
          self.a0.clear()
          self.a1.clear()
          self.a2.clear()
          self.a3.clear()
          self.a4.clear()
          self.a5.clear()
          self.a6.clear()
          self.a7.clear()
          self.a8.clear()
          self.a9.clear()
          self.z1.clear()
          self.z2.clear()
          self.z3.clear()
          self.z4.clear()
          self.z5.clear()
          self.z6.clear()


          self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))

      except ZeroDivisionError:
          self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
    def asimasim(self):
        try:
            self.uyari.clear()
            A = float(self.baslangic.text())
            D1 = float(self.f1.text())
            D2 = float(self.f2.text())
            T1 = float(self.f3.text())
            L1 = float(self.f6.text())
            L2 = float(self.f7.text())
            L3 = float(self.f8.text())
            L4= float(self.f10.text())
            T2 = float(self.f4.text())
            T3 = float(self.f5.text())
            T4=float(self.f9.text())
            AK1 = float(self.c1.text())
            K1K2 = float(self.c2.text())
            K2B = float(self.c3.text())

            A = round(A,3)
            self.a0.setText(str(A))
            TS2 = round(AK1 - T1,3)
            self.a1.setText(str(TS2))
            self.sigma0 = round(AK1 - T1 + (L1 / 2),3)
            self.z1.setText(str(self.sigma0))
            SC2 = round(TS2 + L1,3)
            self.a2.setText(str(SC2))
            self.B1 = round(SC2 + (D1 / 2),3)
            self.z2.setText(str(self.B1))
            CS2 = round(SC2 + D1,3)
            self.a3.setText(str(CS2))
            self.F1 = round(CS2 + (L2 / 2), 3)
            self.z3.setText(str(self.F1))
            ST2 = round(CS2 + L2,3)
            self.a4.setText(str(ST2))
            TS3 = round(K1K2 + ST2 - T2 - T3,3)
            self.a5.setText(str(TS3))
            self.sigma1 = round(TS3 + (L3 / 2),3)
            self.z4.setText(str(self.sigma1))
            SC3 = round(TS3 + L3,3)
            self.a6.setText(str(SC3))
            self.B2 = round(SC3 + (D2 / 2),3)
            self.z5.setText(str(self.B2))
            CS3 = round(SC3 + D2,3)
            self.a7.setText(str(CS3))
            self.F2 = round(CS3 + (L4 / 2),3)
            self.z6.setText(str(self.F2))
            ST3 = round(CS3 + L4,3)
            self.a8.setText(str(ST3))
            B =round(K2B - T4+ ST3,3)
            self.a9.setText(str(B))
            self.yoluzun.setText(str(B))
        except ValueError:

            self.yoluzun.clear()
            self.a0.clear()
            self.a1.clear()
            self.a2.clear()
            self.a3.clear()
            self.a4.clear()
            self.a5.clear()
            self.a6.clear()
            self.a7.clear()
            self.a8.clear()
            self.a9.clear()
            self.z1.clear()
            self.z2.clear()
            self.z3.clear()
            self.z4.clear()
            self.z5.clear()
            self.z6.clear()


            self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))

        except ZeroDivisionError:
            self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))








class gecisegrisizyoluz(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()
    def setUI(self):
        self.pushh = QPushButton("Tanımlar")
        self.push = QPushButton("Birimler")
        self.aciklamasi=QLabel("Burada hesaplanan yol uzunluğu hesabı iki kurp varsayılarak yapılmıştır.\nBurada verilen değerleri(T1,T2 gibi) yoldaki kurp sıralamasına\ngöre yazmalısınız.")
        self.yoluzun = QLabel()
        self.yoluzun.setFont(QFont("Arial", 10, QFont.Bold))
        self.uzunyol = QLabel("Toplam Yol Uzunluğu:")
        self.uzunyol.setFont(QFont("Arial", 10, QFont.Bold))
        self.aciklama=QLabel("Açıklama:")
        self.aciklama.setFont(QFont("Arial", 12, QFont.Bold))
        self.label = QLabel("Geçiş Eğrisiz Yol Uzunluk Hesabı")
        self.label.setFont(QFont("Helvetica", 14, QFont.Bold))
        self.c1 = QLabel("Veriler:")
        self.c1.setFont(QFont("Arial", 12, QFont.Bold))
        self.c2 = QLabel("Cevaplar:")
        self.c2.setFont(QFont("Arial", 12, QFont.Bold))

        self.uyari=QLabel()
        self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
        self.a1=QLineEdit()
        self.a2 = QLineEdit()
        self.a3 = QLineEdit()
        self.a4 = QLineEdit()
        self.a5 = QLineEdit()
        self.a6 = QLineEdit()
        self.a7 = QLineEdit()
        self.a8 = QLineEdit()
        self.hesapla = QPushButton("Hesapla")
        self.temizle = QPushButton("Temizle")
        self.b1 = QLineEdit()
        self.b2 = QLineEdit()
        self.b3 = QLineEdit()
        self.b4 = QLineEdit()
        self.b5 = QLineEdit()
        self.b6 = QLineEdit()
        self.b7 = QLineEdit()
        self.b8 = QLineEdit()
        form=QFormLayout()
        form.addRow("1.Kurbun Developman Boyu(D1)", self.a1)
        form.addRow("1.Teğet Boyu(T1)", self.a2)
        form.addRow("2.Kurbun Developman Boyu(D2)", self.a3)
        form.addRow("2.Teğet Boyu(T2)", self.a4)

        form2= QFormLayout()
        form2.addRow("A", self.a5)
        form2.addRow("|AK1|", self.a6)
        form2.addRow("|K1K2|", self.a7)
        form2.addRow("|K2B|", self.a8)
        form3 = QFormLayout()
        form3.addRow("A", self.b1)
        form3.addRow("T01", self.b2)
        form3.addRow("B1", self.b3)
        form3.addRow("TF1", self.b4)
        hbox5 = QHBoxLayout()
        hbox5.addWidget(self.uzunyol)
        hbox5.addWidget(self.yoluzun)
        form4 = QFormLayout()
        form4.addRow("T02", self.b5)
        form4.addRow("B2", self.b6)
        form4.addRow("TF2", self.b7)
        form4.addRow("B", self.b8)
        hbox7=QHBoxLayout()
        hbox7.addWidget(self.hesapla)
        hbox7.addWidget(self.temizle)
        hbox=QHBoxLayout()
        hbox.addLayout(form)
        hbox.addLayout(form2)
        hbox3 = QHBoxLayout()
        hbox3.addLayout(form3)
        hbox3.addLayout(form4)
        form9=QFormLayout()
        form9.addRow(self.label)
        form9.addRow(self.c1)
        form9.addRow(hbox)
        form9.addRow(self.uyari)
        form9.addRow(hbox7)
        form9.addRow(self.c2)
        form9.addRow(hbox5)
        form9.addRow(hbox3)
        form9.addRow(self.aciklama)
        form48=QVBoxLayout()
        form48.addWidget(self.push)
        form48.addWidget(self.pushh)
        form10=QHBoxLayout()
        form10.addWidget(self.aciklamasi)
        form10.addLayout(form48)
        vbox=QFormLayout()

        vbox.addRow(form9)
        vbox.addRow(form10)
        self.setLayout(vbox)
        self.push.clicked.connect(self.baglan)
        self.pushh.clicked.connect(self.baglanma)
        self.temizle.clicked.connect(self.tmz)
        self.hesapla.clicked.connect(self.hesaplamak)
        self.show()

    def baglan(self):
        mesajkutusu = QMessageBox()
        mesajkutusu.setText("Kullanılan Birimler")
        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
        mesajkutusu.setWindowTitle("Birimler")
        mesajkutusu.setInformativeText("Hepsi:metre ")
        mesajkutusu.exec()

    def baglanma(self):
        mesajkutusu = QMessageBox()
        mesajkutusu.setText("Cevaplardaki Tanımlar")
        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
        mesajkutusu.setWindowTitle("Tanımlar")
        mesajkutusu.setInformativeText(
            "A=Başlangıç Kilometresi\nAK1=Başlangıç ve Some Noktaları Arası Uzunluk(AK1 Aliyman Boyu)\nK1K2=Some Noktaları Arası Uzunluk(K1K2 Aliyman Boyu)\nK2B=2.Some ve Bitiş Noktaları Arası Uzunluk(K2B Aliyman Boyu)\nT01=1.Kurbun Başlangıcı\t\tT02=2.Kurbun Başlangıcı\nB1=1.Kurbun Ortası\t\tB2=2.Kurbun Ortası\nTF1=1.Kurbun Bitişi\t\tTF2=2.Kurbun Bitişi\nB=Toplam Yol Uzunluğu")
        mesajkutusu.exec()
    def tmz(self):
        self.yoluzun.clear()
        self.a1.clear()
        self.a2.clear()
        self.a3.clear()
        self.a4.clear()
        self.a5.clear()
        self.a6.clear()
        self.a7.clear()
        self.a8.clear()
        self.b1.clear()
        self.b2.clear()
        self.b3.clear()
        self.b4.clear()
        self.b5.clear()
        self.b6.clear()
        self.b7.clear()
        self.b8.clear()
        self.uyari.clear()
    def hesaplamak(self):
     try:
        self.uyari.clear()
        D1=float(self.a1.text())
        T1 = float(self.a2.text())
        D2 = float(self.a3.text())
        T2 = float(self.a4.text())
        A = float(self.a5.text())
        AK1=float(self.a6.text())
        K1K2=float(self.a7.text())
        K2B=float(self.a8.text())
        A=round(A,3)
        self.b1.setText(str(A))
        T01=round(AK1-T1,3)
        self.b2.setText(str(T01))
        B1=round(T01+D1/2,3)
        self.b3.setText(str(B1))
        TF1=round(B1+D1/2,3)
        self.b4.setText(str(TF1))
        T02=round(TF1+K1K2-T1-T2,3)
        self.b5.setText(str(T02))
        B2=round(T02+D2/2,3)
        self.b6.setText(str(B2))
        TF2=round(B2+D2/2,3)
        self.b7.setText(str(TF2))
        B=round(TF2+K2B-T2,3)
        self.b8.setText(str(B))
        self.yoluzun.setText(str(B))
     except ValueError:
         self.b1.clear()
         self.b2.clear()
         self.b3.clear()
         self.b4.clear()
         self.b5.clear()
         self.b6.clear()
         self.b7.clear()
         self.b8.clear()
         self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))

     except ZeroDivisionError:
          self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))

class durusgörüs(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()


    def setUI(self):
        self.push = QPushButton("Birimler")
        self.adim = QLabel("Açıklama:")
        self.adim.setFont(QFont("Arial", 12, QFont.Bold))
        self.ilan = QLabel("Yolun Boyuna Eğimini hesaplanırken 0.02 ise 2 giriniz.")
        self.uyari=QLabel("")
        self.uyari.setFont(QFont("Helvetica", 10, QFont.Bold))
        self.label = QLabel("Duruş Görüş Uzunluğu Hesabı")
        self.label.setFont(QFont("Helvetica", 14, QFont.Bold))
        self.grad = math.pi / 200
        self.f1=QLineEdit()
        self.f2=QLineEdit()
        self.f3=QLineEdit()
        self.f4=QLineEdit()
        self.c1 = QLineEdit()
        self.c2 = QLineEdit()
        self.f9 = QLabel("Veriler:")
        self.f11 = QLabel("Cevaplar:")

        self.hesapla=QPushButton("Hesapla")
        self.temizle=QPushButton("Temizle")
        hbox1 = QHBoxLayout()
        hbox1.addWidget(self.hesapla)
        hbox1.addWidget(self.temizle)
        form=QFormLayout()
        form.addRow(self.label)
        form.addRow(self.f9)
        form.addRow(self.f9.setFont(QFont("Arial", 12, QFont.Bold)))
        form.addRow("Proje Hızı(Vp)",self.f1)
        form.addRow("Reaksiyon Süresi(tr)",self.f2)
        form.addRow("Sürtünme Katsayısı(f)",self.f3)
        form.addRow("Yolun Boyuna Eğimi(s)",self.f4)
        form.addRow(self.uyari)
        form.addRow(hbox1)

        form.addRow(self.f11)
        form.addRow(self.f11.setFont(QFont("Arial", 12, QFont.Bold)))
        form.addRow("Duruş Görüş Uzunluğu(İniş İçin)",self.c1)
        form.addRow("Duruş Görüş Uzunluğu(Çıkış İçin)",self.c2)
        form1=QHBoxLayout()
        form1.addWidget(self.ilan)
        form1.addWidget(self.push)
        vbox=QFormLayout()
        vbox.addRow(form)
        vbox.addRow(self.adim)
        vbox.addRow(form1)
        self.setLayout(vbox)
        self.push.clicked.connect(self.baglan)
        self.hesapla.clicked.connect(self.simetrik)
        self.temizle.clicked.connect(self.tmz)
        self.show()

    def baglan(self):
        mesajkutusu = QMessageBox()
        mesajkutusu.setText("Kullanılan Birimler")
        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
        mesajkutusu.setWindowTitle("Birimler")
        mesajkutusu.setInformativeText(
            "Hız:km/saat\nReaksiyon Süresi:saniye\nYolun Boyuna Eğimi:yüzdelik\nCevaplar:metre")
        mesajkutusu.exec()


    def tmz(self):
        self.f1.clear()
        self.f2.clear()
        self.f3.clear()
        self.f4.clear()
        self.c1.clear()
        self.c2.clear()
        self.uyari.clear()

    def simetrik(self):

       try:
        giris1=  float(self.f1.text())
        giris2 = float(self.f2.text())
        giris3 = float(self.f3.text())
        giris4 = float(self.f4.text())
        cevap=round(0.278*giris1*giris2+0.00394*(giris1**2/(giris3-(giris4/100))),3)
        self.c1.setText(str(cevap))
        cevaplar = round(0.278 * giris1 * giris2 + 0.00394 * (giris1 ** 2 / (giris3 +(giris4/100))),3)
        self.c2.setText(str(cevaplar))

        self.uyari.clear()
       except ValueError:
        self.c1.clear()
        self.c2.clear()
        self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))


       except ZeroDivisionError:
        self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
       pass






class pergelacikligi(QWidget):
        def __init__(self):
            super().__init__()
            self.setUI()

        def setUI(self):

            self.notbaslik = QLabel("Açıklama:")
            self.push = QPushButton("Birimler")
            self.notbaslik.setFont(QFont("Arial", 12, QFont.Bold))
            self.notlama=QLabel("1)Ölçek 1/2000 ise paydasını 2000 olarak yazınız.\nAksi taktirde program hata verecektir\n2)İki Eşyükselti Eğrisi Arasındaki Kot Farkı:\nEş yükselti kaç metrede bir geçer(2 m,5 m gibi)\n3)Daire Yarıçapı:Burada bulduğunuz bu \ndeğeri çizim yaparken bilgisayarda kullanabilirsiniz.")
            self.b1=QLabel("Pergel Açıklığı Hesabı")
            self.f1 = QLineEdit()

            self.f2 = QLineEdit()
            self.f3 = QLineEdit()
            self.f4 = QLineEdit()
            self.f5 = QLineEdit()
            self.f6 = QLineEdit()
            self.f7 = QLineEdit()
            self.f8 = QLineEdit()
            self.f9 = QLabel("Veriler:")
            self.f10 = QLineEdit()
            self.f11 = QLabel("Cevaplar:")
            self.form1 = QFormLayout()
            self.uyari = QLabel("")
            self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
            self.form77=QHBoxLayout()
            self.form77.addWidget(self.notlama)
            self.form77.addWidget(self.push)

            self.form1.addRow(self.f11)
            self.form1.addRow(self.f11.setFont(QFont("Arial", 12, QFont.Bold)))
            self.form1.addRow("İki Nokta Arasındaki Kot Farkı(ΔHab)", self.f8)
            self.form1.addRow("Düsey Eğim Hesabı(s)", self.f2)
            self.form1.addRow("Pergel Açıklığı(L)", self.f1)
            self.form1.addRow("Daire Yarıçapı(N)", self.f10)
            self.form = QFormLayout()
            self.form.addRow(self.b1)
            self.form.addRow(self.b1.setFont(QFont("Helvetica", 14, QFont.Bold)))
            self.form.addRow(self.f9)
            self.form.addRow(self.f9.setFont(QFont("Arial", 12, QFont.Bold)))
            self.form.addRow("Başlangıç ve Bitiş Noktaları Arasındaki Uzaklık(Sab)", self.f3)
            self.form.addRow("Başlangıç Noktasının Kotu(Ha)", self.f6)
            self.form.addRow("Bitiş Noktasının Kotu(Hb)", self.f7)
            self.form.addRow("İki Eşyükselti Eğrisi Arasındaki Kot Farkı(h)", self.f4)
            self.form.addRow("Pafta Ölçeğinin Paydası(m)", self.f5)
            self.form.addRow(self.uyari)
            self.hesapla = QPushButton("Hesapla")
            self.temizle = QPushButton("Temizle")

            hbox1 = QHBoxLayout()
            hbox1.addWidget(self.hesapla)
            hbox1.addWidget(self.temizle)
            vbox = QFormLayout()
            vbox.addRow(self.form)
            vbox.addRow(hbox1)
            vbox.addRow(self.form1)
            vbox.addRow(self.notbaslik)
            vbox.addRow(self.form77)
            self.setLayout(vbox)

            self.push.clicked.connect(self.baglan)
            self.temizle.clicked.connect(self.tmz)
            self.hesapla.clicked.connect(self.hesapkitap)
            self.hesapla.clicked.connect(self.pergel)
            self.hesapla.clicked.connect(self.hfarki)
            self.hesapla.clicked.connect(self.daireyar)


            self.show()

        def baglan(self):
            mesajkutusu = QMessageBox()
            mesajkutusu.setText("Kullanılan Birimler")
            mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
            mesajkutusu.setWindowTitle("Birimler")
            mesajkutusu.setInformativeText("Pergel Açıklığı:santimetre\nDiğer Veriler:metre ")
            mesajkutusu.exec()

        def tmz(self):
            self.f1.clear()
            self.f2.clear()
            self.f3.clear()
            self.f4.clear()
            self.f5.clear()
            self.f6.clear()
            self.f7.clear()
            self.f8.clear()
            self.f10.clear()
            self.uyari.clear()

        def hesapkitap(self):

            try:
                giris1 = float(self.f3.text())
                giris2 = float(self.f6.text())
                giris3 = float(self.f7.text())
                cevap = round(100 * ((giris3 - giris2) / giris1),2)
                self.f2.setText(str(cevap))
                self.uyari.clear()
            except ValueError:
                self.f1.clear()
                self.f2.clear()
                self.f8.clear()
                self.f10.clear()
                self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
            except ZeroDivisionError:
                self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                pass

        def pergel(self):

            try:
                giris1 = float(self.f3.text())
                giris2 = float(self.f6.text())
                giris5 = float(self.f7.text())
                giris3 = float(self.f4.text())
                giris4 = float(self.f5.text())

                cevap = round((100 * giris3) / ((giris4) * ((giris5 - giris2) / giris1)),2)
                self.f1.setText(str(cevap))
                self.uyari.clear()
            except ValueError:
                self.f1.clear()
                self.f2.clear()
                self.f8.clear()
                self.f10.clear()
                self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
            except ZeroDivisionError:
                self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                pass

        def hfarki(self):
            try:

                giris1 = float(self.f6.text())
                giris2 = float(self.f7.text())
                cevap = round((giris2 - giris1),2)
                self.f8.setText(str(cevap))
                self.uyari.clear()
            except ValueError:
                self.f1.clear()
                self.f2.clear()
                self.f8.clear()
                self.f10.clear()
                self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
            except ZeroDivisionError:
                self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                pass

        def daireyar(self):

            try:
                giris1 = float(self.f3.text())
                giris2 = float(self.f6.text())
                giris3 = float(self.f7.text())
                giris4 = float(self.f4.text())
                giris5 = float(self.f5.text())

                cevap = round(((giris5 * ((100 * giris4) / (giris5 * ((giris3 - giris2) / giris1)))) / 100),3)
                self.f10.setText(str(cevap))
                self.uyari.clear()
            except ValueError:
                self.f1.clear()
                self.f2.clear()
                self.f8.clear()
                self.f10.clear()
                self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
            except ZeroDivisionError:
                self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                pass

class gecisegrisiz(QWidget):
            def __init__(self):
                super().__init__()
                self.setUI()

            def setUI(self):
                self.push = QPushButton("Birimler")
                self.b1 = QLabel("Birinci Yatay Kurp Elemanları")
                self.b2 = QLabel("İkinci Yatay Kurp Elemanları")
                self.rbas = QLabel("Kurp Sayısını İşaretleyiniz")
                self.rbas.setFont(QFont("Arial", 10, QFont.SansSerif))
                self.r1 = QRadioButton("1")
                self.r2 = QRadioButton("2")
                self.rbut = QPushButton("Seç")
                self.adım = QLabel("Açıklama:")
                self.adım.setFont(QFont("Arial", 12, QFont.Bold))
                self.ilan = QLabel(
                    "Dever hesaplanırken 0.02 ise 2 giriniz.")
                self.baslik = QLabel("Geçiş Eğrisiz Yatay Kurp Hesabı")
                self.baslik.setFont(QFont("Helvetica", 14, QFont.Bold))
                self.uyari = QLabel("")
                self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
                self.grad = math.pi / 200
                self.l1=QLabel("Yarıçap Değeri(R2)")
                self.l2 = QLabel("Hız(Vp2)")
                self.l3 = QLabel("Sapma Açısı(Δ2)")
                self.l4 = QLabel("Teğet Boyu(t2)")
                self.l5 = QLabel("Developman Boyu(D2)")
                self.l6 = QLabel("Bisektris Uzunluğu(b2)")
                self.l7 = QLabel("Kiriş Uzunluğu(N2)")
                self.l8 = QLabel("Dever(d2)")
                self.l9 = QLabel("Rakortman Boyu(Ld2)")

                self.f1 = QLineEdit()
                self.f2 = QLineEdit()
                self.f3 = QLineEdit()
                self.f4 = QLineEdit()
                self.f5 = QLineEdit()
                self.f6 = QLineEdit()
                self.f7 = QLineEdit()
                self.f8 = QLineEdit()
                self.f9 = QLineEdit()
                self.z1 = QLineEdit()
                self.z2 = QLineEdit()
                self.z3 = QLineEdit()
                self.z4 = QLineEdit()
                self.z5 = QLineEdit()
                self.z6 = QLineEdit()
                self.z7 = QLineEdit()
                self.z8 = QLineEdit()
                self.z9 = QLineEdit()
                self.f10 = QLabel("Veriler:")
                self.f11 = QLabel("Cevaplar:")
                self.hesapla = QPushButton("Hesapla")
                self.temizle = QPushButton("Temizle")
                self.hbox = QHBoxLayout()
                self.hbox.addWidget(self.hesapla)
                self.hbox.addWidget(self.temizle)
                hbox10 = QHBoxLayout()
                hbox10.addWidget(self.r1)
                hbox10.addWidget(self.r2)
                hbox10.addWidget(self.rbut)
                self.v4 = QVBoxLayout()
                self.v4.addWidget(self.rbas)
                self.v4.addLayout(hbox10)

                self.form47 = QFormLayout()
                self.form47.addRow(self.baslik)
                self.form47.addRow(self.v4)
                self.form47.addRow(self.f10)
                self.form47.addRow(self.f10.setFont(QFont("Arial", 12, QFont.Bold)))
                self.form=QFormLayout()
                self.form.addRow(self.b1)
                self.form.addRow(self.b1.setFont(QFont("Arial", 9, QFont.Bold)))
                self.form.addRow("Yarıçap Değeri(R)", self.f1)
                self.form.addRow("Hız(Vp)", self.f2)
                self.form.addRow("Sapma Açısı(Δ)", self.f3)
                self.format=QFormLayout()
                self.format.addRow(self.b2)
                self.format.addRow(self.b2.setFont(QFont("Arial",9, QFont.Bold)))
                self.format.addRow(self.l1, self.z1)
                self.format.addRow(self.l2, self.z2)
                self.format.addRow(self.l3, self.z3)




                self.form1 = QFormLayout()
                self.form1.addRow("Teğet Boyu(t)", self.f4)
                self.form1.addRow("Developman Boyu(D)", self.f5)
                self.form1.addRow("Bisektris Uzunluğu(b)", self.f6)
                self.form1.addRow("Kiriş Uzunluğu(N)", self.f7)
                self.form1.addRow("Dever(d)", self.f8)
                self.form1.addRow("Rakortman Boyu(Ld)", self.f9)
                self.format1=QFormLayout()
                self.format1.addRow(self.l4 , self.z4)
                self.format1.addRow(self.l5, self.z5)
                self.format1.addRow(self.l6, self.z6)
                self.format1.addRow(self.l7,self.z7)
                self.format1.addRow(self.l8,self.z8)
                self.format1.addRow(self.l9, self.z9)


                self.form77=QHBoxLayout()
                self.form77.addWidget(self.ilan)
                self.form77.addWidget(self.push)


                hay=QHBoxLayout()
                hay.addLayout(self.form)
                hay.addLayout(self.format)
                hayy=QHBoxLayout()

                hayy.addLayout(self.form1)
                hayy.addLayout(self.format1)
                vbox= QFormLayout()
                vbox.addRow(self.form47)
                vbox.addRow(hay)
                vbox.addRow(self.uyari)
                vbox.addRow(self.hbox)
                vbox.addRow(self.f11)
                vbox.addRow(self.f11.setFont(QFont("Arial", 12, QFont.Bold)))
                vbox.addRow(hayy)
                vbox.addRow(self.adım)
                vbox.addRow(self.form77)
                self.setLayout(vbox)
                self.push.clicked.connect(self.baglan)
                self.hesapla.clicked.connect(self.check)
                self.hesapla.clicked.connect(self.secim)
                self.rbut.clicked.connect(self.secim)
                self.temizle.clicked.connect(self.tmz)


                self.show()

            def baglan(self):
                mesajkutusu = QMessageBox()
                mesajkutusu.setText("Kullanılan Birimler")
                mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                mesajkutusu.setWindowTitle("Birimler")
                mesajkutusu.setInformativeText("Sapma Açısı:grad\nHız:km/saat\nDiğer Veriler:metre \nDever:yüzdelik")
                mesajkutusu.exec()
            def check(self):
                if self.r1.isChecked():self.tegetboyu()
                elif self.r2.isChecked():self.kiris()
                else:self.uyari.setText(str("Yukarıda Kurp Seçimini Yapınız ve Verileri Eksiksiz Giriniz"))

            def secim(self):
                 if self.r1.isChecked():
                     self.z1.close()
                     self.z2.close()
                     self.z3.close()
                     self.z4.close()
                     self.z5.close()
                     self.z6.close()
                     self.z7.close()
                     self.z8.close()
                     self.z9.close()
                     self.l1.close()
                     self.l2.close()
                     self.l3.close()
                     self.l4.close()
                     self.l5.close()
                     self.l6.close()
                     self.l7.close()
                     self.l8.close()
                     self.l9.close()
                     self.b2.close()
                 elif self.r2.isChecked():
                     self.b2.show()
                     self.z1.show()
                     self.z2.show()
                     self.z3.show()
                     self.z4.show()
                     self.z5.show()
                     self.z6.show()
                     self.z7.show()
                     self.z8.show()
                     self.z9.show()
                     self.l1.show()
                     self.l2.show()
                     self.l3.show()
                     self.l4.show()
                     self.l5.show()
                     self.l6.show()
                     self.l7.show()
                     self.l8.show()
                     self.l9.show()
            def tmz(self):
                self.f1.clear()
                self.f2.clear()
                self.f3.clear()
                self.f4.clear()
                self.f5.clear()
                self.f6.clear()
                self.f7.clear()
                self.f8.clear()
                self.f9.clear()
                self.z1.clear()
                self.z2.clear()
                self.z3.clear()
                self.z4.clear()
                self.z5.clear()
                self.z6.clear()
                self.z7.clear()
                self.z8.clear()
                self.z9.clear()
                self.uyari.clear()

            def kiris(self):
                try:
                    giris1 = float(self.z1.text())
                    giris2 = float(self.z2.text())
                    giris3 = float(self.z3.text())
                    giris4 = float(self.f1.text())
                    giris5 = float(self.f2.text())
                    giris6 = float(self.f3.text())
                    cevap2 = round(giris4* (math.tan(giris6* self.grad / 2)),4)
                    self.f4.setText(str(cevap2))
                    a2 = round(2 * (math.pi) * giris4* (giris6* self.grad / (400 * self.grad)),4)
                    self.f5.setText(str(a2))
                    self.uyari.clear()

                    grad = float(self.grad)
                    b2 = round(giris4* ((1 / math.cos(giris6* grad / 2)) - 1),4)
                    self.f6.setText(str(b2))

                    c2 = round(2 * giris4* (math.sin((giris6* self.grad) / 2)),4)
                    self.f7.setText(str(c2))

                    d2 = round(100 * (0.00443 * ((giris5** 2) / giris4)), 3)
                    self.f8.setText(str(d2))

                    e2 = round((0.0354 * (giris5** 3)) / giris4,3)
                    self.f9.setText(str(e2))

                    cevap = round(giris1 * (math.tan(giris3 * self.grad / 2)),4)
                    self.z4.setText(str(cevap))
                    a1 = round(2 * (math.pi) * giris1 * (giris3 * self.grad / (400 * self.grad)),4)
                    self.z5.setText(str(a1))
                    self.uyari.clear()

                    grad = float(self.grad)
                    b = round(giris1 * ((1 / math.cos(giris3 * grad / 2)) - 1),4)
                    self.z6.setText(str(b))

                    c = round(2 * giris1 * (math.sin((giris3 * self.grad) / 2)),4)
                    self.z7.setText(str(c))

                    d = round(100 * (0.00443 * ((giris2 ** 2) / giris1)), 3)
                    self.z8.setText(str(d))

                    e = round((0.0354 * (giris2 ** 3)) / giris1,3)
                    self.z9.setText(str(e))

                    self.uyari.clear()
                except ValueError:
                    self.f4.clear()
                    self.f5.clear()
                    self.f6.clear()
                    self.f7.clear()
                    self.f8.clear()
                    self.f9.clear()
                    self.z4.clear()
                    self.z5.clear()
                    self.z6.clear()
                    self.z7.clear()
                    self.z8.clear()
                    self.z9.clear()
                    self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
                except ZeroDivisionError:
                    self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                    pass

            def tegetboyu(self):
                try:
                    giris1 = float(self.f1.text())
                    giris2 = float(self.f2.text())
                    giris3 = float(self.f3.text())

                    cevap2 = round(giris1 * (math.tan(giris3 * self.grad / 2)),4)
                    self.f4.setText(str(cevap2))
                    a2= round(2 * (math.pi) * giris1 * (giris3 * self.grad / (400 * self.grad)),4)
                    self.f5.setText(str(a2))
                    self.uyari.clear()

                    grad = float(self.grad)
                    b2= round(giris1 * ((1 / math.cos(giris3 * grad / 2)) - 1),4)
                    self.f6.setText(str(b2))

                    c2 = round(2 * giris1 * (math.sin((giris3 * self.grad) / 2)),4)
                    self.f7.setText(str(c2))

                    d2 = round(100 * (0.00443 * ((giris2 ** 2) / giris1)), 3)
                    self.f8.setText(str(d2))

                    e2= round((0.0354 * (giris2 ** 3)) / giris1,3)
                    self.f9.setText(str(e2))

                    self.uyari.clear()
                except ValueError:
                    self.f4.clear()
                    self.f5.clear()
                    self.f6.clear()
                    self.f7.clear()
                    self.f8.clear()
                    self.f9.clear()
                    self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
                except ZeroDivisionError:
                    self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                    pass




class giris(QWidget):

       def __init__(self):
        super().__init__()
        self.setUI()

       def setUI(self):
        self.bugün= time.strftime('%c')
        self.label = QLabel("<h1>Karayolu Proje Hesabı<h1>")
        self.label.setFont(QFont("Impact", 13, QFont.Bold))
        self.label.setAlignment(Qt.AlignCenter)
        label3 = QLabel("<a href=\"https://www.canberkcabbaroglu.com\">  Copyright © 2019 - Canberk Cabbaroğlu")
        label3.setFont(QFont("Arial", 10, QFont.Bold))
        label3.setAlignment(Qt.AlignLeft)
        label4=QLabel(self.bugün)
        label4.setFont(QFont("Arial", 8, QFont.Unstretched))
        label7=QLabel()
        label7.setAlignment(Qt.AlignLeft)
        label7.setPixmap(QPixmap(":loggo1.png"))
        vbox = QVBoxLayout()
        vbox.addWidget(label7)
        vbox.addWidget(self.label)
        vbox.addWidget(label4)
        self.setLayout(vbox)
        self.show()
class baslik(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()

    def setUI(self):
        self.bugün = time.strftime('%c')
        label4 = QLabel(self.bugün)
        label4.setFont(QFont("Arial", 8, QFont.Unstretched))
        label7 = QLabel()
        label7.setAlignment(Qt.AlignCenter)
        label7.setPixmap(QPixmap(":loggo.png"))
        self.label6 = QLabel("Bu program Harita Mühendisi\nCanberk Cabbaroğlu tarafından yazılmıştır.\nTüm Hakları Saklıdır.")
        self.label6.setFont(QFont("Helvetica", 16, QFont.Bold))
        self.label6.setAlignment(Qt.AlignCenter)
        vbox = QVBoxLayout()
        vbox.addWidget(label7)
        vbox.addWidget(self.label6)
        vbox.addWidget(label4)
        self.setLayout(vbox)
        self.show()


class formül(QWidget):
    def __init__(self):
        super().__init__()
        self.setUI()


    def setUI(self):
        self.dur = QLabel("Kullanılan Formüller")
        self.dur.setFont(QFont("Arial", 14, QFont.Bold))
        self.plat = QLabel("Platform Genişliği= Kaplama Genişliği\n\t\t+Banket Genişliği")
        self.plat.setFont(QFont("Arial",10, QFont.Bold))
        self.durus = QLabel("Duruş Görüş Uzunluğu:")
        self.durus.setFont(QFont("Arial", 10, QFont.Bold))
        self.durusac=QLabel(" Lfe = 0,278xVp x tr+0,00394x\n[Vp^2/ ( f(+-)s )]")
        self.durusac.setFont(QFont("Arial", 8, QFont.Bold))
        self.sapma= QLabel("Sapma Açısı Hesabı:")
        self.sapma.setFont(QFont("Arial", 10, QFont.Bold))
        self.saptırgac = QLabel(
            "Açıklık Açısı :( AB )=arctan[(Yb–Ya)/(Xb–Xa)]\nAliyman BoyU:|AB |=√ [(Yb-Ya)^2 /(Xb-Xa)^2]\nSapma Açısı:\n∆1=(K1K2)‐(A K1)\t∆2=(K2B )‐(K1K2)")
        self.saptırgac.setFont(QFont("Arial", 8, QFont.Bold))
        self.genis = QLabel("Genişleme Miktarı:")
        self.genis.setFont(QFont("Arial", 10, QFont.Bold))
        self.genisleme = QLabel("b=nx(l^2)/(2xR)+(0.05x Vp)/√R\nh1= B/2xdmin\nh2=((dmax)x(B+b))/2\nRakortman Boyu=K= (2Lh1)/((h2-h1))")
        self.genisleme.setFont(QFont("Arial", 8, QFont.Bold))
        self.per = QLabel("Pergel Açıklığı:")
        self.per.setFont(QFont("Arial", 10, QFont.Bold))
        self.perge = QLabel(" ΔH = HA – HB\ns = ΔH / SAB \nL = [( 100 x h ) / ( m x s )] ")
        self.perge.setFont(QFont("Arial",8, QFont.Bold))
        self.gecisegrisiz = QLabel("Geçiş Eğrisiz Yatay Kurp:")
        self.gecisegrisiz.setFont(QFont("Arial", 10, QFont.Bold))
        self.gecisegrisizfor = QLabel("t = R x tan (∆ / 2 )\nD = 2 π Rx ∆ / (400 grad)\nb= Rx[ sec (∆/ 2)−1 )]\nN= 2 x Rxsin(∆/2 )\nd = 0,00443x(Vp^2)/R\nLd = 0,0354 x (Vp^3)/R")
        self.gecisegrisizfor.setFont(QFont("Arial", 8, QFont.Bold))
        self.gecisegrili = QLabel("Geçiş Eğrili Yatay Kurp:")
        self.gecisegrili.setFont(QFont("Arial", 10, QFont.Bold))
        self.gecisegrilifor = QLabel(
            "t = R x tan (∆ / 2 )\nD = 2 π Rx ∆ / (400 grad)\nb= Rx[ sec (∆/ 2)−1 )]\nN= 2 x Rxsin(∆/2 )\nd = 0,00443x(Vp^2)/R")
        self.gecisegrilifor.setFont(QFont("Arial", 8, QFont.Bold))
        self.uygunluk = QLabel("Uygun Klotoid Parametresinin\nSeçimi:")
        self.uygunluk.setFont(QFont("Arial", 10, QFont.Bold))
        self.uygunlukk = QLabel(
            "1)Konfor şartı:L=(A^2)/R\n2)Optik Uygunluk:(R/3) ≤ A ≤ R\n3)Dinamik Şart:Amin=0.17x√(Vp^3 )\n4)Sademe Değeri:p=[(Vp^3)/\n(46,7xRxL)]\n5)Geometrik Şart:L/2 < D/2\n6)Dever Uygunluk Kıstası:Amin= √ [ ( R x B / n )\nx(dmin+ dmax) / 0,005 ]")
        self.uygunlukk.setFont(QFont("Arial", 8, QFont.Bold))
        self.simetri = QLabel("Simetrik Klotoid Seçimi:")
        self.simetri.setFont(QFont("Arial", 10, QFont.Bold))
        self.simetria = QLabel( "Y = L ^ 3 / (6.A ^ 2) – L ^ 7 / \n(336.A ^ 6) + L ^ 11 / (42240.A ^ 10)\nX = L - L ^ 5 / (40.A ^ 4) + L ^ 9 /\n(3456. A ^ 8)\nTu = X – Y.Cotτ\nTk = Y / Sinτ\nYm =Y + R.Cosτ\nXm = X – R.Sinτ\n∆R = Ym- R\nt = (∆R+R) * tan(∆/ 2)\nT= Xm +(∆R+R) * tan(∆/ 2)\nS =√(X ^ 2 + Y ^ 2)\nτ = L / (2.R) * ρ\nα=∆-2 * τ\nD= 2πR.α/ (400 grad)")
        self.simetria.setFont(QFont("Arial", 8, QFont.Bold))

        self.asimetri2 = QLabel("2.Asimetrik Klotoid Seçimi:")
        self.asimetri2.setFont(QFont("Arial", 10, QFont.Bold))
        self.asimetria2 = QLabel(
            "Y = L ^ 3 / (6A ^ 2) – L ^ 7 /\n(336A ^ 6) + L ^ 11 / (42240A ^ 10)\nX = L - L ^ 5 / (40A ^ 4) + (L ^ 9) /\n(3456A ^ 8)\nτ1 = L / (2R) * (200/pi)\nTu = X – YCotτ2\nTk = Y / Sinτ2\nYm =Y + RCosτ2\nXm = X – RSinτ2\n∆R2= Ym- R\nt = (∆R+R)xtan(∆/ 2)\nd = (∆R1-∆R2) / Sin(∆))\nT= Xm + (∆R+R) * tan(∆/2)+d\nS =√(X ^ 2 + Y ^ 2)\nα =∆ - (τ1 + τ2)\n D2= 2πR.α/ (400 grad)"
            )

        self.asimetria2.setFont(QFont("Arial", 8, QFont.Bold))
        self.asimetri1 = QLabel("1.Asimetrik Klotoid Seçimi:")
        self.asimetri1.setFont(QFont("Arial", 10, QFont.Bold))
        self.asimetria1 = QLabel("Y = L ^ 3 / (6A ^ 2) – L ^ 7 /\n(336A ^ 6) + L ^ 11 / (42240A ^ 10)\nX = L - L ^ 5 / (40A ^ 4) + (L ^ 9)/\n(3456A ^ 8)\nτ1 = L / (2R) * (200/pi)\nTu = X – YCotτ1\nTk = Y / Sinτ1\nYm =Y + RCosτ1\nXm = X – RSinτ1\n∆R1= Ym- R\nt = (∆R+R)xtan(∆/ 2)\nd = (∆R1-∆R2) / Sin(∆))\nT= Xm + (∆R+R) * tan(∆/2)-d\nS =√(X ^ 2 + Y ^ 2)\nα =∆ - (τ1 + τ2)\n D1 = 2πR.α/ (400 grad)")


        self.asimetria1.setFont(QFont("Arial", 8, QFont.Bold))


        vbox=QVBoxLayout()

        vbox.addWidget(self.dur)
        vbox.addWidget(self.plat)
        vbox.addWidget(self.sapma)
        vbox.addWidget(self.saptırgac)
        vbox.addWidget(self.durus)
        vbox.addWidget(self.durusac)
        vbox.addWidget(self.per)
        vbox.addWidget(self.perge)
        vbox.addWidget(self.genis)
        vbox.addWidget(self.genisleme)
        vbox.addWidget(self.gecisegrisiz)
        vbox.addWidget(self.gecisegrisizfor)
        vbox.addWidget(self.gecisegrili)
        vbox.addWidget(self.gecisegrilifor)
        vbox.addWidget(self.uygunluk)
        vbox.addWidget(self.uygunlukk)
        vbox2=QVBoxLayout()
        vbox2.addWidget(self.simetri)
        vbox2.addWidget(self.simetria)
        vbox2.addWidget(self.asimetri1)
        vbox2.addWidget(self.asimetria1)
        vbox2.addWidget(self.asimetri2)
        vbox2.addWidget(self.asimetria2)

        hbox=QHBoxLayout()
        hbox.addLayout(vbox)
        hbox.addLayout(vbox2)
        self.setLayout(hbox)


class simetrikklotoid(QWidget):
            def __init__(self):
                super().__init__()
                self.setUI()

            def setUI(self):
                self.push=QPushButton("Birimler")
                self.acik = QLabel("Açıklama:")
                self.acik.setFont(QFont("Arial", 12, QFont.Bold))
                self.aciklama = QLabel("Geçiş Eğrili Yatay Kurpta bulduğunuz veya kullandığınız değerleri giriniz.\nBurada bulduğumuz Teğet Boyu(T) Devolopman Boyu(D) ve Klotoid \nBoyunu(L)geçiş eğrili yol uzunluğu hesaplanırken kullanacağız.")
                self.uyari = QLabel("")
                self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
                self.label = QLabel("Simetrik Klotoid Hesabı")
                self.label.setFont(QFont("Helvetica", 14, QFont.Bold))
                self.grad = math.pi / 200
                self.f1 = QLineEdit()
                self.f2 = QLineEdit()
                self.f3 = QLineEdit()
                self.f4 = QLineEdit()
                self.f9 = QLabel("Veriler:")
                self.f11 = QLabel("Cevaplar:")

                self.f11.setFont(QFont("Arial", 12, QFont.Bold))
                self.c1 = QLineEdit()
                self.c2 = QLineEdit()
                self.c3 = QLineEdit()
                self.c4 = QLineEdit()
                self.c5 = QLineEdit()
                self.c6 = QLineEdit()
                self.c7 = QLineEdit()
                self.c8 = QLineEdit()
                self.c9 = QLineEdit()
                self.c10 = QLineEdit()
                self.c11 = QLineEdit()
                self.c12 = QLineEdit()
                self.c13 = QLineEdit()
                self.hesapla = QPushButton("Hesapla")
                self.temizle = QPushButton("Temizle")
                form = QFormLayout()
                form.addRow(self.f9)
                form.addRow(self.f9.setFont(QFont("Arial", 12, QFont.Bold)))
                form.addRow("Yarıçap Değeri(R)", self.f1)
                form.addRow("Sapma Açısı(Δ)", self.f2)
                form.addRow("Klotoid Parametresi(A)", self.f3)
                form.addRow("Klotoid Boyu(L)", self.f4)
                form.addRow(self.uyari)
                form1 = QFormLayout()

                form1.addRow("Y", self.c1)
                form1.addRow("X", self.c2)
                form1.addRow("Tu", self.c3)
                form1.addRow("Tk", self.c4)
                form1.addRow("Ym", self.c5)
                form1.addRow("Xm", self.c6)
                form1.addRow("ΔR", self.c7)
                form2=QFormLayout()
                form2.addRow("t", self.c8)
                form2.addRow("T", self.c9)
                form2.addRow("S", self.c10)
                form2.addRow("τ", self.c11)
                form2.addRow("α", self.c12)
                form2.addRow("D", self.c13)
                hbox2=QHBoxLayout()
                hbox2.addLayout(form1)
                hbox2.addLayout(form2)
                hbox1 = QHBoxLayout()
                hbox1.addWidget(self.hesapla)
                hbox1.addWidget(self.temizle)
                hbox97 = QHBoxLayout()
                hbox97.addWidget(self.aciklama)
                hbox97.addWidget(self.push)

                vbox = QFormLayout()

                vbox.addRow(self.label)
                vbox.addRow(self.f9)
                vbox.addRow(form)
                vbox.addRow(hbox1)
                vbox.addRow(self.f11)
                vbox.addRow(hbox2)


                vbox.addRow(self.acik)
                vbox.addRow(hbox97)

                self.setLayout(vbox)
                self.push.clicked.connect(self.baglan)
                self.hesapla.clicked.connect(self.simetrik)
                self.temizle.clicked.connect(self.tmz)
                self.show()

            def baglan(self):
                mesajkutusu = QMessageBox()
                mesajkutusu.setText("Kullanılan Birimler")
                mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                mesajkutusu.setWindowTitle("Birimler")
                mesajkutusu.setInformativeText("Sapma Açısı(Δ),τ(to),α(alfa):grad\nDiğer Veriler:metre ")
                mesajkutusu.exec()

            def tmz(self):
                self.f1.clear()
                self.f2.clear()
                self.f3.clear()
                self.f4.clear()
                self.c1.clear()
                self.c2.clear()
                self.c3.clear()
                self.c4.clear()
                self.c5.clear()
                self.c6.clear()
                self.c7.clear()
                self.c8.clear()
                self.c9.clear()
                self.c10.clear()
                self.c11.clear()
                self.c12.clear()
                self.c13.clear()
                self.uyari.clear()

            def simetrik(self):

                try:
                    giris1 = float(self.f1.text())
                    giris2 = float(self.f2.text())
                    giris3 = float(self.f3.text())
                    giris4 = float(self.f4.text())
                    self.uyari.clear()

                    to = round((giris4 / (2 * giris1)) * (200 / math.pi),5)
                    self.c11.setText(str(to))
                    Y = round(((giris4 ** 3) / (6 * giris3 ** 2)) - (giris4 ** 7 / (336 * (giris3 ** 6))) + ((giris4 ** 11) / (42240 * giris3 ** 10)),4)
                    self.c1.setText(str(Y))
                    X = round(giris4 - ((giris4 ** 5) / (40 * (giris3 ** 4)) + ((giris4 ** 9) / (3456 * (giris3 ** 8)))),4)
                    self.c2.setText(str(X))
                    Tu = round(X - (Y * (1 / math.tan(to * self.grad))),4)
                    self.c3.setText(str(Tu))
                    Tk = round(Y / math.sin(to * self.grad),4)
                    self.c4.setText(str(Tk))
                    Ym = round(Y + (giris1 * math.cos(to * self.grad)),4)
                    self.c5.setText(str(Ym))
                    Xm = round(X - (giris1 * math.sin(to * self.grad)),4)
                    self.c6.setText(str(Xm))
                    DeltaR = round(Ym - giris1,4)
                    self.c7.setText(str(DeltaR))
                    t = round((DeltaR + giris1) * (math.tan(giris2 * self.grad / 2)),4)
                    self.c8.setText(str(t))
                    T = round(Xm + (DeltaR + giris1) * (math.tan(giris2 * self.grad / 2)),4)
                    self.c9.setText(str(T))
                    S = round(math.sqrt(X ** 2 + Y ** 2),4)
                    self.c10.setText(str(S))
                    alfa = round(giris2 - (2 * to),5)
                    self.c12.setText(str(alfa))
                    D = round(2 * math.pi * giris1 * (alfa / 400),4)
                    self.c13.setText(str(D))
                    self.uyari.clear()
                except ValueError:
                    self.c1.clear()
                    self.c2.clear()
                    self.c3.clear()
                    self.c4.clear()
                    self.c5.clear()
                    self.c6.clear()
                    self.c7.clear()
                    self.c8.clear()
                    self.c9.clear()
                    self.c10.clear()
                    self.c11.clear()
                    self.c12.clear()
                    self.c13.clear()
                    self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
                except ZeroDivisionError:
                    self.c1.clear()
                    self.c2.clear()
                    self.c3.clear()
                    self.c4.clear()
                    self.c5.clear()
                    self.c6.clear()
                    self.c7.clear()
                    self.c8.clear()
                    self.c9.clear()
                    self.c10.clear()
                    self.c11.clear()
                    self.c12.clear()
                    self.c13.clear()
                    self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                    pass

class asimetrikklotoid(QWidget):
                    def __init__(self):
                        super().__init__()
                        self.setUI()

                    def setUI(self):
                        self.acik = QLabel("Açıklama:")
                        self.acik.setFont(QFont("Arial", 12, QFont.Bold))
                        self.aciklama = QLabel(
                            "Geçiş Eğrili Yatay Kurpta bulduğunuz veya kullandığınız değerleri giriniz.\nBurada bulduğumuz Teğet Boyu(T) Devolopman Boyu(D) ve Klotoid\nBoyunu(L) geçiş eğrili yol uzunluğu hesaplanırken kullanacağız.")
                        self.push = QPushButton("Birimler")
                        self.label = QLabel("Asimetrik Klotoid Hesabı")
                        self.label.setFont(QFont("Helvetica", 14, QFont.Bold))
                        self.uyari = QLabel("")
                        self.uyari.setFont(QFont("Helvetica",10, QFont.Bold))
                        self.grad = math.pi / 200
                        self.f1 = QLineEdit()
                        self.f2 = QLineEdit()
                        self.f3 = QLineEdit()
                        self.f4 = QLineEdit()
                        self.f5 = QLineEdit()
                        self.f6 = QLineEdit()
                        self.f9 = QLabel("Veriler:")
                        self.f11 = QLabel("Cevaplar:")
                        self.c1 = QLineEdit()
                        self.c2 = QLineEdit()
                        self.c3 = QLineEdit()
                        self.c4 = QLineEdit()
                        self.c5 = QLineEdit()
                        self.c6 = QLineEdit()
                        self.c7 = QLineEdit()
                        self.c8 = QLineEdit()
                        self.c9 = QLineEdit()
                        self.c10 = QLineEdit()
                        self.c11 = QLineEdit()
                        self.c12 = QLineEdit()
                        self.c13 = QLineEdit()
                        self.c14 = QLineEdit()
                        self.d1 = QLineEdit()
                        self.d2 = QLineEdit()
                        self.d3 = QLineEdit()
                        self.d4 = QLineEdit()
                        self.d5 = QLineEdit()
                        self.d6 = QLineEdit()
                        self.d7 = QLineEdit()
                        self.d8 = QLineEdit()
                        self.d9 = QLineEdit()
                        self.d10 = QLineEdit()
                        self.d11 = QLineEdit()
                        self.d12 = QLineEdit()
                        self.d13 = QLineEdit()
                        self.d14 = QLineEdit()
                        self.para = QLabel("1.Asimetrik Kurp Parametresi")
                        self.para2 = QLabel("2.Asimetrik Kurp Parametresi")
                        self.f9.setFont(QFont("Arial", 12, QFont.Bold))
                        self.f11.setFont(QFont("Arial", 12, QFont.Bold))

                        self.hesapla = QPushButton("Hesapla")
                        self.temizle = QPushButton("Temizle")
                        form = QFormLayout()
                        form.addRow("Yarıçap Değeri(R)", self.f1)
                        form.addRow("1.Klotoid Parametresi(A1)", self.f3)
                        form.addRow("2.Klotoid Parametresi(A2)", self.f5)
                        form8 = QFormLayout()
                        form8.addRow("Sapma Açısı(Δ)", self.f2)
                        form8.addRow("1.Klotoid Boyu(L1)", self.f4)
                        form8.addRow("2.Klotoid Boyu(L2)", self.f6)

                        form1 = QFormLayout()
                        form1.addRow("Y", self.c1)
                        form1.addRow("X", self.c2)
                        form1.addRow("Tu", self.c3)
                        form1.addRow("Tk", self.c4)
                        form1.addRow("Ym", self.c5)
                        form1.addRow("Xm", self.c6)
                        form1.addRow("ΔR", self.c7)
                        form3=QFormLayout()
                        form3.addRow("t", self.c8)
                        form3.addRow("d", self.c14)
                        form3.addRow("T", self.c9)
                        form3.addRow("S", self.c10)
                        form3.addRow("τ", self.c11)
                        form3.addRow("α", self.c12)
                        form3.addRow("D", self.c13)
                        hbox2=QHBoxLayout()
                        hbox2.addLayout(form1)
                        hbox2.addLayout(form3)
                        form2 = QFormLayout()
                        form2.addRow("Y2", self.d1)
                        form2.addRow("X2", self.d2)
                        form2.addRow("Tu2", self.d3)
                        form2.addRow("Tk2", self.d4)
                        form2.addRow("Ym2", self.d5)
                        form2.addRow("Xm2", self.d6)
                        form2.addRow("ΔR2", self.d7)
                        form4=QFormLayout()
                        form4.addRow("t2", self.d8)
                        form4.addRow("d2", self.d14)
                        form4.addRow("T2", self.d9)
                        form4.addRow("S2", self.d10)
                        form4.addRow("τ2", self.d11)
                        form4.addRow("α2", self.d12)
                        form4.addRow("D2", self.d13)
                        hbox3 = QHBoxLayout()
                        hbox3.addLayout(form2)
                        hbox3.addLayout(form4)
                        hbox9 = QHBoxLayout()
                        hbox9.addLayout(hbox2)
                        hbox9.addLayout(hbox3)
                        hbox = QHBoxLayout()
                        hbox.addLayout(form)
                        hbox.addLayout(form8)
                        vbox7 = QVBoxLayout()
                        vbox7.addWidget(self.hesapla)
                        vbox8 = QVBoxLayout()
                        vbox8.addWidget(self.temizle)
                        hbox1 = QHBoxLayout()

                        hbox1.addLayout(vbox7)
                        hbox1.addLayout(vbox8)
                        hbox40 = QHBoxLayout()
                        hbox40.addWidget(self.para)
                        hbox40.addWidget(self.para2)
                        hbox97 = QHBoxLayout()
                        hbox97.addWidget(self.aciklama)
                        hbox97.addWidget(self.push)
                        vbox = QVBoxLayout()
                        vbox.addWidget(self.label)
                        vbox.addWidget(self.f9)
                        vbox.addLayout(hbox)
                        vbox.addWidget(self.uyari)
                        vbox.addLayout(hbox1)
                        vbox.addWidget(self.f11)
                        vbox.addLayout(hbox40)
                        vbox.addLayout(form1)
                        vbox.addLayout(hbox9)
                        vbox.addWidget(self.acik)
                        vbox.addLayout(hbox97)
                        self.setLayout(vbox)
                        self.push.clicked.connect(self.baglan)
                        self.hesapla.clicked.connect(self.asimetrik)
                        self.temizle.clicked.connect(self.tmz)
                        self.show()

                    def tmz(self):
                        self.f1.clear()
                        self.f2.clear()
                        self.f3.clear()
                        self.f4.clear()
                        self.f5.clear()
                        self.f6.clear()
                        self.c1.clear()
                        self.c2.clear()
                        self.c3.clear()
                        self.c4.clear()
                        self.c5.clear()
                        self.c6.clear()
                        self.c7.clear()
                        self.c8.clear()
                        self.c9.clear()
                        self.c10.clear()
                        self.c11.clear()
                        self.c12.clear()
                        self.c13.clear()
                        self.c14.clear()
                        self.d1.clear()
                        self.d2.clear()
                        self.d3.clear()
                        self.d4.clear()
                        self.d5.clear()
                        self.d6.clear()
                        self.d7.clear()
                        self.d8.clear()
                        self.d9.clear()
                        self.d10.clear()
                        self.d11.clear()
                        self.d12.clear()
                        self.d13.clear()
                        self.d14.clear()
                        self.uyari.clear()

                    def baglan(self):
                        mesajkutusu = QMessageBox()
                        mesajkutusu.setText("Kullanılan Birimler")
                        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                        mesajkutusu.setWindowTitle("Birimler")
                        mesajkutusu.setInformativeText("Sapma Açısı(Δ),τ(to),α(alfa):grad\nDiğer Veriler:metre ")
                        mesajkutusu.exec()
                    def asimetrik(self):

                        try:
                            giris1 = float(self.f1.text())
                            giris2 = float(self.f2.text())
                            giris3 = float(self.f3.text())
                            giris4 = float(self.f4.text())
                            giris5 = float(self.f5.text())
                            giris6 = float(self.f6.text())

                            to = round((giris4 / (2 * giris1)) * (200 / math.pi),5)
                            self.c11.setText(str(to))
                            Y = round(((giris4 ** 3) / (6 * giris3 ** 2)) - (giris4 ** 7 / (336 * giris3 ** 6)) + (
                                        (giris4 ** 11) / (42240 * giris3 ** 10)),4)
                            self.c1.setText(str(Y))
                            X =round( giris4 - ((giris4 ** 5) / (40 * giris3 ** 4)) + (giris4 ** 9) / (3456 * giris3 ** 8),4)
                            self.c2.setText(str(X))
                            Tu = round(X - (Y * (1 / math.tan(to * self.grad))),4)
                            self.c3.setText(str(Tu))
                            Tk = round(Y / math.sin(to * self.grad),4)
                            self.c4.setText(str(Tk))
                            Ym = round(Y + (giris1 * math.cos(to * self.grad)),4)
                            self.c5.setText(str(Ym))
                            Xm = round(X - (giris1 * math.sin(to * self.grad)),4)
                            self.c6.setText(str(Xm))
                            DeltaR4 = round(Ym - giris1,4)
                            self.c7.setText(str(DeltaR4))
                            t = round((DeltaR4 + giris1) * (math.tan(giris2 * self.grad / 2)),4)
                            self.c8.setText(str(t))

                            to2 = round((giris6 / (2 * giris1)) * (200 / math.pi),5)
                            self.d11.setText(str(to2))
                            Y2 = round(((giris6 ** 3) / (6 * giris5 ** 2)) - (giris6 ** 7 / (336 * giris5 ** 6)) + (
                                        (giris6 ** 11) / (42240 * giris5 ** 10)),4)
                            self.d1.setText(str(Y2))
                            X2 = round(giris6 - ((giris6 ** 5) / (40 * giris5 ** 4)) + (giris6 ** 9) / (3456 * giris3 ** 8),4)
                            self.d2.setText(str(X2))
                            Tu2 = round(X2 - (Y2 * (1 / math.tan(to2 * self.grad))),4)
                            self.d3.setText(str(Tu2))
                            Tk2 =round(Y2 / math.sin(to2 * self.grad),4)
                            self.d4.setText(str(Tk2))
                            Ym2 = round(Y2 + (giris1 * math.cos(to2 * self.grad)),4)
                            self.d5.setText(str(Ym2))
                            Xm2 = round(X2 - (giris1 * math.sin(to2 * self.grad)),4)
                            self.d6.setText(str(Xm2))
                            DeltaR5 = round(Ym2 - giris1,4)
                            self.d7.setText(str(DeltaR5))
                            t2 = round((DeltaR5 + giris1) * (math.tan(giris2 * self.grad / 2)),4)
                            self.d8.setText(str(t2))
                            d2 = round((DeltaR4 - DeltaR5) / (math.sin(giris2 * (math.pi / 200))),4)
                            self.d14.setText(str(d2))
                            self.c14.setText((str(d2)))

                            T = round((Xm + (DeltaR4 + giris1) * (math.tan(giris2 * self.grad / 2))) - d2,4)
                            self.c9.setText(str(T))
                            S = round(math.sqrt(X ** 2 + Y ** 2),4)
                            self.c10.setText(str(S))
                            alfa = round(giris2 - (to + to2),5)
                            self.c12.setText(str(alfa))
                            D = round(2 * math.pi * giris1 * (alfa / 400),4)
                            self.c13.setText(str(D))
                            T2 = round((Xm2 + (DeltaR5 + giris1) * (math.tan(giris2 * self.grad / 2))) + d2,4)
                            self.d9.setText(str(T2))
                            S2 =round( math.sqrt(X2 ** 2 + Y2 ** 2),4)
                            self.d10.setText(str(S2))
                            alfa2 = round(giris2 - (to + to2),4)
                            self.d12.setText(str(alfa2))
                            D2 = round(2 * math.pi * giris1 * (alfa2 / 400),4)
                            self.d13.setText(str(D2))
                            self.uyari.clear()
                        except ValueError:
                            self.c1.clear()
                            self.c2.clear()
                            self.c3.clear()
                            self.c4.clear()
                            self.c5.clear()
                            self.c6.clear()
                            self.c7.clear()
                            self.c8.clear()
                            self.c9.clear()
                            self.c10.clear()
                            self.c11.clear()
                            self.c12.clear()
                            self.c13.clear()
                            self.c14.clear()
                            self.d1.clear()
                            self.d2.clear()
                            self.d3.clear()
                            self.d4.clear()
                            self.d5.clear()
                            self.d6.clear()
                            self.d7.clear()
                            self.d8.clear()
                            self.d9.clear()
                            self.d10.clear()
                            self.d11.clear()
                            self.d12.clear()
                            self.d13.clear()
                            self.d14.clear()
                            self.uyari.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))
                        except ZeroDivisionError:
                            self.uyari.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                            self.c1.clear()
                            self.c2.clear()
                            self.c3.clear()
                            self.c4.clear()
                            self.c5.clear()
                            self.c6.clear()
                            self.c7.clear()
                            self.c8.clear()
                            self.c9.clear()
                            self.c10.clear()
                            self.c11.clear()
                            self.c12.clear()
                            self.c13.clear()
                            self.c14.clear()
                            self.d1.clear()
                            self.d2.clear()
                            self.d3.clear()
                            self.d4.clear()
                            self.d5.clear()
                            self.d6.clear()
                            self.d7.clear()
                            self.d8.clear()
                            self.d9.clear()
                            self.d10.clear()
                            self.d11.clear()
                            self.d12.clear()
                            self.d13.clear()
                            self.d14.clear()
                            pass
class gecisegrili(QWidget):
                    def __init__(self):
                                super().__init__()
                                self.setUI()

                    def setUI(self):
                                self.push = QPushButton("Birimler")
                                self.b1 = QLabel("Birinci Yatay Kurp Elemanları")
                                self.b2 = QLabel("İkinci Yatay Kurp Elemanları")
                                self.rbas = QLabel("Kurp Sayısını İşaretleyiniz")
                                self.rbas.setFont(QFont("Arial", 10, QFont.SansSerif))
                                self.r1 = QRadioButton("1")
                                self.r2 = QRadioButton("2")
                                self.rbut = QPushButton("Seç")
                                self.adım = QLabel("Açıklama:")
                                self.adım.setFont(QFont("Arial", 12, QFont.Bold))
                                self.ilan = QLabel(
                                    "Dever hesaplanırken 0.02 ise 2 giriniz.")
                                self.grad = math.pi / 200
                                self.baslik = QLabel("Geçiş Eğrili Yatay Kurp Hesabı")
                                self.baslik.setFont(QFont("Helvetica", 14, QFont.Bold))
                                self.l1 = QLabel("Yarıçap Değeri(R2)")
                                self.l2 = QLabel("Hız(Vp2)")
                                self.l3 = QLabel("Sapma Açısı(Δ2)")
                                self.l0 = QLabel("Klotoid Parametresi(A2)")
                                self.l4 = QLabel("Teğet Boyu(t2)")
                                self.l5 = QLabel("Developman Boyu(D2)")
                                self.l6 = QLabel("Bisektris Uzunluğu(b2)")
                                self.l7 = QLabel("Kiriş Uzunluğu(N2)")
                                self.l8 = QLabel("Dever(d2)")
                                self.l9 = QLabel("Klotoid Boyu(L2)")

                                self.z1 = QLineEdit()
                                self.z2 = QLineEdit()
                                self.z3 = QLineEdit()
                                self.z4 = QLineEdit()
                                self.z5 = QLineEdit()
                                self.z6 = QLineEdit()
                                self.z7 = QLineEdit()
                                self.z8 = QLineEdit()
                                self.z9 = QLineEdit()
                                self.z0=QLineEdit()
                                self.f1 = QLineEdit()
                                self.f2 = QLineEdit()
                                self.f4 = QLineEdit()
                                self.y1 = QLineEdit()
                                self.y2 = QLineEdit()
                                self.y3 = QLineEdit()
                                self.y4 = QLineEdit()

                                self.f5 = QLineEdit()
                                self.f6 = QLineEdit()
                                self.f8 = QLabel()
                                self.f9 = QLabel()
                                self.f10 = QLabel("Veriler:")
                                self.f11 = QLabel("Cevaplar:")
                                self.f13 = QLabel()
                                self.f14 = QLabel()
                                self.f15 = QLineEdit()
                                self.f19 = QLabel()
                                self.f20 = QLabel()
                                self.f22 = QLabel()
                                self.f23 = QLabel()
                                self.f31 = QLabel()
                                self.f32 = QLabel()

                                self.hesapla = QPushButton("Hesapla")
                                self.temizle = QPushButton("Temizle")

                                self.label = QLabel("")
                                self.label.setFont(QFont("Helvetica", 10, QFont.Bold))
                                hbox10 = QHBoxLayout()
                                hbox10.addWidget(self.r1)
                                hbox10.addWidget(self.r2)
                                hbox10.addWidget(self.rbut)
                                self.v4 = QVBoxLayout()
                                self.v4.addWidget(self.rbas)
                                self.v4.addLayout(hbox10)


                                self.f10.setFont(QFont("Arial", 12, QFont.Bold))
                                self.f11.setFont(QFont("Arial", 12, QFont.Bold))
                                self.form = QFormLayout()
                                self.form.addRow(self.b1.setFont(QFont("Arial", 9, QFont.Bold)))
                                self.form.addRow(self.b1)
                                self.form.addRow("Yarıçap Değeri(R)", self.f1)
                                self.form.addRow("Hız(Vp)", self.f2)
                                self.form.addRow("Sapma Açısı(Δ)", self.f4)
                                self.form.addRow("Klotoid Parametresi(A)", self.f5)
                                self.form2y=QFormLayout()
                                self.form2y.addRow(self.b2)
                                self.form2y.addRow(self.b2.setFont(QFont("Arial", 9, QFont.Bold)))
                                self.form2y.addRow(self.l1, self.z1)
                                self.form2y.addRow(self.l2, self.z2)
                                self.form2y.addRow(self.l3, self.z3)
                                self.form2y.addRow(self.l0,self.z0)
                                self.form1 = QFormLayout()

                                self.form1.addRow("Dever(d)", self.f15)
                                self.form1.addRow("Klotoid Boyu(L)", self.f6)
                                self.form1.addRow("Teğet Boyu(t)", self.y1)
                                self.form1.addRow("Developman Boyu(D)", self.y2)
                                self.form1.addRow("Bisektris Uzunluğu(b)", self.y3)
                                self.form1.addRow("Kiriş Uzunluğu(N)", self.y4)
                                self.form2y1=QFormLayout()

                                self.form2y1.addRow(self.l8, self.z8)
                                self.form2y1.addRow(self.l9, self.z9)
                                self.form2y1.addRow(self.l4, self.z4)
                                self.form2y1.addRow(self.l5, self.z5)
                                self.form2y1.addRow(self.l6, self.z6)
                                self.form2y1.addRow(self.l7, self.z7)
                                hboxbir=QHBoxLayout()
                                hboxbir.addLayout(self.form)
                                hboxbir.addLayout(self.form2y)
                                hboxiki=QHBoxLayout()
                                hboxiki.addLayout(self.form1)
                                hboxiki.addLayout(self.form2y1)
                                hbox47=QHBoxLayout()
                                hbox47.addWidget(self.ilan)
                                hbox47.addWidget(self.push)
                                hbox = QHBoxLayout()
                                hbox.addWidget(self.hesapla)
                                hbox.addWidget(self.temizle)

                                vbox = QFormLayout()
                                vbox.addRow(self.baslik)
                                vbox.addRow(self.v4)
                                vbox.addRow(self.f10)
                                vbox.addRow(hboxbir)
                                vbox.addRow(self.label)
                                vbox.addRow(hbox)
                                vbox.addRow(self.f11)
                                vbox.addRow(hboxiki)
                                vbox.addRow(self.adım)
                                vbox.addRow(hbox47)

                                self.setLayout(vbox)

                                self.push.clicked.connect(self.baglan)
                                self.hesapla.clicked.connect(self.check)
                                self.hesapla.clicked.connect(self.secim)
                                self.rbut.clicked.connect(self.secim)
                                self.temizle.clicked.connect(self.tmz)
                                self.show()

                    def baglan(self):
                        mesajkutusu = QMessageBox()
                        mesajkutusu.setText("Kullanılan Birimler")
                        mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                        mesajkutusu.setWindowTitle("Birimler")
                        mesajkutusu.setInformativeText("Sapma Açısı(Δ):grad\nHız(Vp):km/saat\nDiğer Veriler:metre\nDever:yüzdelik")
                        mesajkutusu.exec()

                    def check(self):
                        if self.r1.isChecked():self.Lbul()
                        elif self.r2.isChecked():self.ybul()
                        else: self.label.setText(str("Yukarıda Kurp Seçimini Yapınız ve Verileri Eksiksiz Giriniz"))

                    def secim(self):
                                if self.r1.isChecked():
                                    self.z0.close()
                                    self.z1.close()
                                    self.z2.close()
                                    self.z3.close()
                                    self.z4.close()
                                    self.z5.close()
                                    self.z6.close()
                                    self.z7.close()
                                    self.z8.close()
                                    self.z9.close()
                                    self.l0.close()
                                    self.l1.close()
                                    self.l2.close()
                                    self.l3.close()
                                    self.l4.close()
                                    self.l5.close()
                                    self.l6.close()
                                    self.l7.close()
                                    self.l8.close()
                                    self.l9.close()
                                    self.b2.close()
                                elif self.r2.isChecked():
                                    self.b2.show()
                                    self.z0.show()
                                    self.z1.show()
                                    self.z2.show()
                                    self.z3.show()
                                    self.z4.show()
                                    self.z5.show()
                                    self.z6.show()
                                    self.z7.show()
                                    self.z8.show()
                                    self.z9.show()
                                    self.l0.show()
                                    self.l1.show()
                                    self.l2.show()
                                    self.l3.show()
                                    self.l4.show()
                                    self.l5.show()
                                    self.l6.show()
                                    self.l7.show()
                                    self.l8.show()
                                    self.l9.show()

                    def tmz(self):
                                self.z0.clear()
                                self.z1.clear()
                                self.z2.clear()
                                self.z3.clear()
                                self.z4.clear()
                                self.z5.clear()
                                self.z6.clear()
                                self.z7.clear()
                                self.z8.clear()
                                self.z9.clear()
                                self.label.clear()
                                self.f1.clear()
                                self.f2.clear()
                                self.f4.clear()
                                self.f5.clear()
                                self.f6.clear()
                                self.f15.clear()
                                self.y1.clear()
                                self.y2.clear()
                                self.y3.clear()
                                self.y4.clear()

                    def ybul(self):
                                try:
                                    giri1 = float(self.z1.text())
                                    giri2 = float(self.z2.text())
                                    giri4 = float(self.z3.text())
                                    giri5 = float(self.z0.text())
                                    giris1 = float(self.f1.text())
                                    giris2 = float(self.f2.text())
                                    giris4 = float(self.f4.text())
                                    giris5 = float(self.f5.text())

                                    teget = round(giris1 * (math.tan(giris4 * self.grad / 2)),4)
                                    self.y1.setText(str(teget))
                                    devo = round(2 * (math.pi) * giris1 * (giris4 * self.grad / (400 * self.grad)),4)
                                    self.y2.setText(str(devo))
                                    cevapp = round(giris1 * ((1 / math.cos(giris4 * self.grad / 2)) - 1),4)
                                    self.y3.setText(str(cevapp))
                                    cevap = round(2 * giris1 * (math.sin((giris4 * self.grad) / 2)),4)
                                    self.y4.setText(str(cevap))

                                    L = round((giris5 ** 2 / giris1),4)
                                    self.f6.setText(str(L))

                                    A = round(100 * (0.00443 * (giris2 ** 2) / giris1), 3)
                                    self.f15.setText(str(A))

                                    self.label.clear()



                                    tege = round(giri1 * (math.tan(giri4 * self.grad / 2)),4)
                                    self.z4.setText(str(tege))
                                    dev = round(2 * (math.pi) * giri1 * (giri4 * self.grad / (400 * self.grad)),4)
                                    self.z5.setText(str(dev))
                                    ceva = round(giri1 * ((1 / math.cos(giri4 * self.grad / 2)) - 1),4)
                                    self.z6.setText(str(ceva))
                                    ceap = round(2 * giri1 * (math.sin((giri4 * self.grad) / 2)),4)
                                    self.z7.setText(str(ceap))

                                    L5= round((giri5 ** 2 / giri1),4)
                                    self.z9.setText(str(L5))

                                    A3 = round(100 * (0.00443 * (giri2 ** 2) / giri1), 3)
                                    self.z8.setText(str(A3))

                                    self.label.clear()


                                except ValueError:
                                    self.z4.clear()
                                    self.z5.clear()
                                    self.z6.clear()
                                    self.z7.clear()
                                    self.z8.clear()
                                    self.z9.clear()
                                    self.f6.clear()
                                    self.f15.clear()
                                    self.y1.clear()
                                    self.y2.clear()
                                    self.y3.clear()
                                    self.y4.clear()
                                    self.label.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))


                                except ZeroDivisionError:
                                    self.label.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                                    pass

                    def Lbul(self):
                                try:
                                    giris1 = float(self.f1.text())
                                    giris2 = float(self.f2.text())
                                    giris4 = float(self.f4.text())
                                    giris5 = float(self.f5.text())

                                    teget = round(giris1 * (math.tan(giris4 * self.grad / 2)),4)
                                    self.y1.setText(str(teget))
                                    devo = round(2 * (math.pi) * giris1 * (giris4 * self.grad / (400 * self.grad)),4)
                                    self.y2.setText(str(devo))
                                    cevapp =round(giris1 * ((1 / math.cos(giris4 * self.grad / 2)) - 1),4)
                                    self.y3.setText(str(cevapp))
                                    cevap = round(2 * giris1 * (math.sin((giris4 * self.grad) / 2)),4)
                                    self.y4.setText(str(cevap))

                                    L = round((giris5 ** 2 / giris1),4)
                                    self.f6.setText(str(L))


                                    A = round(100*(0.00443 * (giris2 ** 2) / giris1), 3)
                                    self.f15.setText(str(A))

                                    self.label.clear()


                                except ValueError:
                                    self.z4.clear()
                                    self.z5.clear()
                                    self.z6.clear()
                                    self.z7.clear()
                                    self.z8.clear()
                                    self.z9.clear()
                                    self.f6.clear()
                                    self.f15.clear()
                                    self.y1.clear()
                                    self.y2.clear()
                                    self.y3.clear()
                                    self.y4.clear()
                                    self.label.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))

                                except ZeroDivisionError:
                                    self.label.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                                pass

class uygunluk(QWidget):
                        def __init__(self):
                            super().__init__()
                            self.setUI()

                        def setUI(self):
                            self.push = QPushButton("Birimler")
                            self.adım = QLabel("Açıklama:")
                            self.adım.setFont(QFont("Arial", 12, QFont.Bold))
                            self.ilan = QLabel(
                               "Dever hesaplanırken 0.02 ise 2 giriniz.")
                            self.grad = math.pi / 200
                            self.baslik = QLabel("Uygun Klotoid Parametrelerinin Seçimi")
                            self.baslik.setFont(QFont("Helvetica", 14, QFont.Bold))
                            self.f1 = QLineEdit()
                            self.f2 = QLineEdit()
                            self.f3 = QLineEdit()
                            self.f4 = QLineEdit()
                            self.f5 = QLineEdit()
                            self.z1=QLineEdit()
                            self.z2=QLineEdit()
                            self.z3=QLineEdit()
                            self.f7 = QLabel("Optik Uygunluk Kıstası")
                            self.f8 = QLabel()
                            self.f9 = QLabel()
                            self.f10 = QLabel("Veriler:")
                            self.f10.setFont(QFont("Arial", 12, QFont.Bold))
                            self.f12 = QLabel("Dinamik Şart Kıstası")
                            self.f13 = QLabel()
                            self.f14 = QLabel()
                            self.f18 = QLabel("Sademe Değeri")
                            self.f19 = QLabel()
                            self.f20 = QLabel()
                            self.f21 = QLabel("Geometrik Şart")
                            self.f22 = QLabel()
                            self.f23 = QLabel()
                            self.f30 = QLabel("Konfor Şartı")
                            self.f31 = QLabel()
                            self.f32 = QLabel()
                            self.f33 = QLabel("Uygunluk Şartları:")
                            self.f46=QLabel("Dever Uygunluk Kıstası")
                            self.f47=QLabel()
                            self.f48=QLabel()

                            self.hesapla = QPushButton("Hesapla")
                            self.temizle = QPushButton("Temizle")

                            self.label = QLabel("")
                            self.label.setFont(QFont("Helvetica",10, QFont.Bold))


                            self.form=QFormLayout()
                            self.form.addRow("Şerit Sayısı(n)",self.z1)
                            self.form.addRow("Yarıçap Değeri(R)", self.f1)
                            self.form.addRow("Hız(Vp)", self.f2)
                            self.form.addRow("Platform Genişliği(B)", self.f3)
                            self.form2=QFormLayout()
                            self.form2.addRow("Sapma Açısı(Δ)", self.f4)
                            self.form2.addRow("Klotoid Parametresi(A)", self.f5)
                            self.form2.addRow("Minimum Dever(dmin)",self.z2)
                            self.form2.addRow("Maximum Dever(dmax)",self.z3)

                            hbox1=QHBoxLayout()
                            hbox1.addLayout(self.form)
                            hbox1.addLayout(self.form2)


                            self.f33.setFont(QFont("Arial", 12, QFont.Bold))
                            hopt = QHBoxLayout()
                            hopt.addWidget(self.f8)
                            hopt.addWidget(self.f9)
                            vopt = QVBoxLayout()
                            vopt.addWidget(self.f7)
                            vopt.addLayout(hopt)
                            hopt1 = QHBoxLayout()
                            hopt1.addWidget(self.f14)
                            hopt1.addWidget(self.f13)
                            vopt1 = QVBoxLayout()
                            vopt1.addWidget(self.f12)
                            vopt1.addLayout(hopt1)
                            hopt3 = QHBoxLayout()
                            hopt3.addWidget(self.f20)
                            hopt3.addWidget(self.f19)
                            vopt3 = QVBoxLayout()
                            vopt3.addWidget(self.f18)
                            vopt3.addLayout(hopt3)
                            hopt4 = QHBoxLayout()
                            hopt4.addWidget(self.f23)
                            hopt4.addWidget(self.f22)
                            vopt4 = QVBoxLayout()
                            vopt4.addWidget(self.f21)
                            vopt4.addLayout(hopt4)

                            hopt5 = QHBoxLayout()
                            hopt5.addWidget(self.f32)
                            hopt5.addWidget(self.f31)
                            vopt5 = QVBoxLayout()
                            vopt5.addWidget(self.f30)
                            vopt5.addLayout(hopt5)
                            hopt6 = QHBoxLayout()
                            hopt6.addWidget(self.f48)
                            hopt6.addWidget(self.f47)
                            vopt6 = QVBoxLayout()
                            vopt6.addWidget(self.f46)
                            vopt6.addLayout(hopt6)

                            hbox = QHBoxLayout()
                            hbox.addWidget(self.hesapla)
                            hbox.addWidget(self.temizle)
                            hbox3=QHBoxLayout()
                            hbox3.addWidget(self.ilan)
                            hbox3.addWidget(self.push)
                            vbox = QVBoxLayout()
                            vbox.addWidget(self.baslik)
                            vbox.addWidget(self.f10)
                            vbox.addLayout(hbox1)
                            vbox.addWidget(self.label)
                            vbox.addLayout(hbox)
                            vbox.addWidget(self.f33)
                            vbox.addLayout(vopt5)
                            vbox.addLayout(vopt)
                            vbox.addLayout(vopt1)
                            vbox.addLayout(vopt6)
                            vbox.addLayout(vopt3)
                            vbox.addLayout(vopt4)
                            vbox.addWidget(self.adım)
                            vbox.addLayout(hbox3)

                            self.setLayout(vbox)
                            self.push.clicked.connect(self.baglan)
                            self.temizle.clicked.connect(self.tmz)
                            self.hesapla.clicked.connect(self.Lbul)

                            self.show()

                        def baglan(self):
                            mesajkutusu = QMessageBox()
                            mesajkutusu.setText("Kullanılan Birimler")
                            mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                            mesajkutusu.setWindowTitle("Birimler")
                            mesajkutusu.setInformativeText(
                                "Sapma Açısı(Δ):grad\nHız(Vp):km/saat\nDiğer Veriler:metre\nDever:yüzdelik")
                            mesajkutusu.exec()
                        def tmz(self):
                            self.f1.clear()
                            self.f2.clear()
                            self.f3.clear()
                            self.f4.clear()
                            self.f5.clear()
                            self.f5.clear()
                            self.f8.clear()
                            self.f9.clear()
                            self.f13.clear()
                            self.f14.clear()
                            self.f19.clear()
                            self.f20.clear()
                            self.f22.clear()
                            self.f23.clear()
                            self.f31.clear()
                            self.f32.clear()
                            self.f47.clear()
                            self.f48.clear()
                            self.z1.clear()
                            self.z2.clear()
                            self.z3.clear()


                            self.label.clear()

                        def Lbul(self):
                            try:
                                giris1 = float(self.f1.text())
                                giris2 = float(self.f2.text())
                                plat=float(self.f3.text())
                                giris4 = float(self.f4.text())
                                giris5 = float(self.f5.text())
                                serit=float(self.z1.text())
                                min=float(self.z2.text())
                                max=float(self.z3.text())
                                L = round((giris5 ** 2 / giris1))
                                devo = round(2 * (math.pi) * giris1 * (giris4 * self.grad / (400 * self.grad)),3)
                                a=math.sqrt((giris1*plat/serit)*(min+max)/0.005)
                                self.f48.setText(str(round(a)))
                                if (giris5 > a):
                                    self.f47.setText(str("Uygun"))
                                else:
                                    self.f47.setText(str("Uygun Değil"))


                                self.f32.setText(str(round(giris5,3)))
                                if (giris5 > L):
                                    self.f31.setText(str("Uygun"))
                                else:
                                    self.f31.setText(str("Uygun Değil"))
                                self.f8.setText(str(round(giris5,3)))
                                if ((giris1 / 3) <= giris5 <= giris1):
                                    self.f9.setText(str("Uygun"))
                                else:
                                    self.f9.setText(str("Uygun Değil"))

                                dinamik = round(0.17 * math.sqrt(giris2 ** 3),3)
                                self.f14.setText(str(dinamik))
                                if (dinamik < giris5):
                                    self.f13.setText(str("Uygun"))
                                else:
                                    self.f13.setText(str("Uygun Değil"))
                                sademe = round(giris2 ** 3 / (46.7 * giris1 * L),3)
                                self.f20.setText(str(sademe))
                                self.f19.setText(str("m/sn^3"))

                                self.f23.setText(str(round(L / 2, 3)))
                                self.f23.setText(str(round(devo / 2, 3)))
                                if ((L / 2) < (devo / 2)):
                                    self.f22.setText(str("Uygun"))
                                else:
                                    self.f22.setText(str("Uygun Değil"))


                                self.label.clear()


                            except ValueError:

                                self.f8.clear()
                                self.f9.clear()
                                self.f13.clear()
                                self.f14.clear()
                                self.f19.clear()
                                self.f20.clear()
                                self.f22.clear()
                                self.f23.clear()
                                self.f31.clear()
                                self.f32.clear()
                                self.f47.clear()
                                self.f48.clear()

                                self.label.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))


                            except ZeroDivisionError:
                                self.label.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                                pass


class genisleme(QWidget):
                        def __init__(self):
                                super().__init__()
                                self.setUI()

                        def setUI(self):
                                self.push = QPushButton("Birimler")
                                self.adım = QLabel("Açıklama:")
                                self.adım.setFont(QFont("Arial", 12, QFont.Bold))
                                self.ilan = QLabel("Dever hesaplanırken 0.02 ise 2 giriniz.")
                                self.grad = math.pi / 200
                                self.baslik = QLabel("Rakortman Boyu Hesabı")
                                self.baslik.setFont(QFont("Helvetica", 14, QFont.Bold))
                                self.f1 = QLineEdit()
                                self.f2 = QLineEdit()
                                self.f3 = QLineEdit()
                                self.f4=QLineEdit()
                                self.f5=QLineEdit()
                                self.f6 = QLineEdit()
                                self.f7=QLineEdit()
                                self.f8=QLineEdit()
                                self.c1=QLineEdit()
                                self.c2=QLineEdit()
                                self.c3=QLineEdit()
                                self.c4=QLineEdit()


                                self.f10 = QLabel("Veriler:")
                                self.f10.setFont(QFont("Arial", 12, QFont.Bold))
                                self.f11 = QLabel("Cevaplar:")



                                self.hesapla = QPushButton("Hesapla")
                                self.temizle = QPushButton("Temizle")

                                self.label = QLabel("")
                                self.label.setFont(QFont("Helvetica",10, QFont.Bold))

                                self.form = QFormLayout()

                                self.form.addRow("Yarıçap Değeri(R)", self.f1)
                                self.form.addRow("Hız(Vp)", self.f2)
                                self.form.addRow("Klotoid Boyu(L)",self.f3)
                                self.form.addRow("Platform Genişliği(B)", self.f4)
                                self.form2 = QFormLayout()
                                self.form2.addRow("Şerit Sayısı(n)", self.f5)
                                self.form2.addRow("Minimum Dever(dmin)", self.f6)
                                self.form2.addRow("Maximum Dever(dmax)", self.f7)
                                self.form2.addRow("Ön ve Arka Dingiller\nArası Mesafe(l)",self.f8)
                                self.form1 = QFormLayout()
                                self.form1.addRow(self.f11)
                                self.form1.addRow(self.f11.setFont(QFont("Arial", 12, QFont.Bold)))
                                self.form1.addRow("Genişleme Miktarı(b)",self.c1)
                                self.form1.addRow("h1",self.c2)
                                self.form1.addRow("h2",self.c3)
                                self.form1.addRow("Rakortman Boyu(K)",self.c4)

                                hbox1 = QHBoxLayout()
                                hbox1.addLayout(self.form)
                                hbox1.addLayout(self.form2)
                                hbox2=QHBoxLayout()
                                hbox2.addWidget(self.ilan)
                                hbox2.addWidget(self.push)

                                hbox = QHBoxLayout()
                                hbox.addWidget(self.hesapla)
                                hbox.addWidget(self.temizle)

                                vbox = QFormLayout()
                                vbox.addRow(self.baslik)
                                vbox.addRow(self.f10)
                                vbox.addRow(hbox1)
                                vbox.addRow(self.label)
                                vbox.addRow(hbox)
                                vbox.addRow(self.form1)
                                vbox.addRow(self.adım)
                                vbox.addRow(hbox2)

                                self.setLayout(vbox)
                                self.push.clicked.connect(self.baglan)
                                self.temizle.clicked.connect(self.tmz)
                                self.hesapla.clicked.connect(self.Lbul)

                                self.show()

                        def baglan(self):
                            mesajkutusu = QMessageBox()
                            mesajkutusu.setText("Kullanılan Birimler")
                            mesajkutusu.setFont(QFont("Arial", 11, QFont.Bold))
                            mesajkutusu.setWindowTitle("Birimler")
                            mesajkutusu.setInformativeText("Sapma Açısı(Δ):grad\nHız(Vp):km/saat\nDiğer Veriler:metre\nDever:yüzdelik")
                            mesajkutusu.exec()
                        def tmz(self):
                            self.f1.clear()

                            self.f2.clear()
                            self.f3.clear()
                            self.f4.clear()
                            self.f5.clear()
                            self.f6.clear()
                            self.f7.clear()
                            self.f8.clear()
                            self.c1.clear()
                            self.c2.clear()
                            self.c3.clear()
                            self.c4.clear()
                            self.label.clear()

                        def Lbul(self):

                                try:
                                    self.label.clear()
                                    R=float(self.f1.text())
                                    V=float(self.f2.text())
                                    L=float(self.f3.text())
                                    B=float(self.f4.text())
                                    n=float(self.f5.text())
                                    dmin=float(self.f6.text())
                                    dmax=float(self.f7.text())
                                    l=float(self.f8.text())
                                    b=round(n*(l**2/(2*R))+(0.05*V/math.sqrt(R)),2)
                                    self.c1.setText(str(b))
                                    h1=round(((B/2)*dmin/100),2)
                                    self.c2.setText(str(h1))
                                    h2=round((((dmax/100)*(B+b))/2),2)
                                    self.c3.setText(str(h2))
                                    K=round((2*L*h1)/(h2-h1),3)
                                    self.c4.setText(str(K))

                                except ValueError:
                                    self.c1.clear()
                                    self.c2.clear()
                                    self.c3.clear()
                                    self.c4.clear()
                                    self.label.setText(str("UYARI:VERİLERİ EKSİKSİZ GİRİNİZ.HARF VE VİRGÜL KULLANMAYINIZ!"))


                                except ZeroDivisionError:
                                    self.label.setText(str("UYARI:TANIMSIZ SAYI GİRİŞİ!"))
                                    pass


if __name__ == '__main__':
    app = QApplication(sys.argv)
    myWindow = MainWindow(None)
    myWindow.show()
    app.exec_()





